{"ast":null,"code":"/*! noble-ciphers - MIT License (c) 2023 Paul Miller (paulmillr.com) */\nconst u8a = a => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = arr => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u16 = arr => new Uint16Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 2));\nexport const u32 = arr => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = arr => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// big-endian hardware is rare. Just in case someone still decides to run ciphers:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\nconst hexes = /* @__PURE__ */Array.from({\n  length: 256\n}, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n  if (typeof str !== 'string') throw new Error(\"utf8ToBytes expected string, got \".concat(typeof str));\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\nexport function bytesToUtf8(bytes) {\n  return new TextDecoder().decode(bytes);\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!u8a(data)) throw new Error(\"expected Uint8Array, got \".concat(typeof data));\n  return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes() {\n  for (var _len = arguments.length, arrays = new Array(_len), _key = 0; _key < _len; _key++) {\n    arrays[_key] = arguments[_key];\n  }\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach(a => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = obj => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(defaults, opts) {\n  if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts))) throw new Error('options must be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged;\n}\nexport function ensureBytes(b, len) {\n  if (!(b instanceof Uint8Array)) throw new Error('Uint8Array expected');\n  if (typeof len === 'number') if (b.length !== len) throw new Error(\"Uint8Array length \".concat(len, \" expected\"));\n}\n// Constant-time equality\nexport function equalBytes(a, b) {\n  // Should not happen\n  if (a.length !== b.length) throw new Error('equalBytes: Different size of Uint8Arrays');\n  let isSame = true;\n  for (let i = 0; i < a.length; i++) isSame && (isSame = a[i] === b[i]); // Lets hope JIT won't optimize away.\n  return isSame;\n}\n// For runtime check if class implements interface\nexport class Hash {}\n// Polyfill for Safari 14\nexport function setBigUint64(view, byteOffset, value, isLE) {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number(value >> _32n & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}","map":{"version":3,"names":["u8a","a","Uint8Array","u8","arr","buffer","byteOffset","byteLength","u16","Uint16Array","Math","floor","u32","Uint32Array","createView","DataView","isLE","Error","hexes","Array","from","length","_","i","toString","padStart","bytesToHex","bytes","hex","hexToBytes","len","array","j","hexByte","slice","byte","Number","parseInt","isNaN","nextTick","asyncLoop","iters","tick","cb","ts","Date","now","diff","utf8ToBytes","str","concat","TextEncoder","encode","bytesToUtf8","TextDecoder","decode","toBytes","data","concatBytes","_len","arguments","arrays","_key","r","reduce","sum","pad","forEach","set","isPlainObject","obj","Object","prototype","call","constructor","checkOpts","defaults","opts","undefined","merged","assign","ensureBytes","b","equalBytes","isSame","Hash","setBigUint64","view","value","_32n","BigInt","_u32_max","wh","wl","h","l","setUint32"],"sources":["/Users/lance/myProject/nostr-client-web/node_modules/@noble/ciphers/src/utils.ts"],"sourcesContent":["/*! noble-ciphers - MIT License (c) 2023 Paul Miller (paulmillr.com) */\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u16 = (arr: TypedArray) =>\n  new Uint16Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 2));\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// big-endian hardware is rare. Just in case someone still decides to run ciphers:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport function bytesToUtf8(bytes: Uint8Array): string {\n  return new TextDecoder().decode(bytes);\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!u8a(data)) throw new Error(`expected Uint8Array, got ${typeof data}`);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj: any) =>\n  Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n    throw new Error('options must be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport function ensureBytes(b: any, len?: number) {\n  if (!(b instanceof Uint8Array)) throw new Error('Uint8Array expected');\n  if (typeof len === 'number')\n    if (b.length !== len) throw new Error(`Uint8Array length ${len} expected`);\n}\n\n// Constant-time equality\nexport function equalBytes(a: Uint8Array, b: Uint8Array): boolean {\n  // Should not happen\n  if (a.length !== b.length) throw new Error('equalBytes: Different size of Uint8Arrays');\n  let isSame = true;\n  for (let i = 0; i < a.length; i++) isSame &&= a[i] === b[i]; // Lets hope JIT won't optimize away.\n  return isSame;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n}\n\n// This will allow to re-use with composable things like packed & base encoders\n// Also, we probably can make tags composable\nexport type Cipher = {\n  tagLength?: number;\n  encrypt(plaintext: Uint8Array): Uint8Array;\n  decrypt(ciphertext: Uint8Array): Uint8Array;\n};\n\nexport type AsyncCipher = {\n  tagLength?: number;\n  encrypt(plaintext: Uint8Array): Promise<Uint8Array>;\n  decrypt(ciphertext: Uint8Array): Promise<Uint8Array>;\n};\n\n// Polyfill for Safari 14\nexport function setBigUint64(\n  view: DataView,\n  byteOffset: number,\n  value: bigint,\n  isLE: boolean\n): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}