{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\n\n// pure.ts\nimport { schnorr } from \"@noble/curves/secp256k1\";\nimport { bytesToHex } from \"@noble/hashes/utils\";\n\n// core.ts\nvar verifiedSymbol = Symbol(\"verified\");\nvar isRecord = obj => obj instanceof Object;\nfunction validateEvent(event) {\n  if (!isRecord(event)) return false;\n  if (typeof event.kind !== \"number\") return false;\n  if (typeof event.content !== \"string\") return false;\n  if (typeof event.created_at !== \"number\") return false;\n  if (typeof event.pubkey !== \"string\") return false;\n  if (!event.pubkey.match(/^[a-f0-9]{64}$/)) return false;\n  if (!Array.isArray(event.tags)) return false;\n  for (let i2 = 0; i2 < event.tags.length; i2++) {\n    let tag = event.tags[i2];\n    if (!Array.isArray(tag)) return false;\n    for (let j = 0; j < tag.length; j++) {\n      if (typeof tag[j] === \"object\") return false;\n    }\n  }\n  return true;\n}\n\n// pure.ts\nimport { sha256 } from \"@noble/hashes/sha256\";\n\n// utils.ts\nvar utils_exports = {};\n__export(utils_exports, {\n  Queue: () => Queue,\n  QueueNode: () => QueueNode,\n  binarySearch: () => binarySearch,\n  insertEventIntoAscendingList: () => insertEventIntoAscendingList,\n  insertEventIntoDescendingList: () => insertEventIntoDescendingList,\n  normalizeURL: () => normalizeURL,\n  utf8Decoder: () => utf8Decoder,\n  utf8Encoder: () => utf8Encoder\n});\nvar utf8Decoder = new TextDecoder(\"utf-8\");\nvar utf8Encoder = new TextEncoder();\nfunction normalizeURL(url) {\n  if (url.indexOf(\"://\") === -1) url = \"wss://\" + url;\n  let p = new URL(url);\n  p.pathname = p.pathname.replace(/\\/+/g, \"/\");\n  if (p.pathname.endsWith(\"/\")) p.pathname = p.pathname.slice(0, -1);\n  if (p.port === \"80\" && p.protocol === \"ws:\" || p.port === \"443\" && p.protocol === \"wss:\") p.port = \"\";\n  p.searchParams.sort();\n  p.hash = \"\";\n  return p.toString();\n}\nfunction insertEventIntoDescendingList(sortedArray, event) {\n  const [idx, found] = binarySearch(sortedArray, b => {\n    if (event.id === b.id) return 0;\n    if (event.created_at === b.created_at) return -1;\n    return b.created_at - event.created_at;\n  });\n  if (!found) {\n    sortedArray.splice(idx, 0, event);\n  }\n  return sortedArray;\n}\nfunction insertEventIntoAscendingList(sortedArray, event) {\n  const [idx, found] = binarySearch(sortedArray, b => {\n    if (event.id === b.id) return 0;\n    if (event.created_at === b.created_at) return -1;\n    return event.created_at - b.created_at;\n  });\n  if (!found) {\n    sortedArray.splice(idx, 0, event);\n  }\n  return sortedArray;\n}\nfunction binarySearch(arr, compare) {\n  let start = 0;\n  let end = arr.length - 1;\n  while (start <= end) {\n    const mid = Math.floor((start + end) / 2);\n    const cmp = compare(arr[mid]);\n    if (cmp === 0) {\n      return [mid, true];\n    }\n    if (cmp < 0) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n  return [start, false];\n}\nvar QueueNode = class {\n  value;\n  next = null;\n  prev = null;\n  constructor(message) {\n    this.value = message;\n  }\n};\nvar Queue = class {\n  first;\n  last;\n  constructor() {\n    this.first = null;\n    this.last = null;\n  }\n  enqueue(value) {\n    const newNode = new QueueNode(value);\n    if (!this.last) {\n      this.first = newNode;\n      this.last = newNode;\n    } else if (this.last === this.first) {\n      this.last = newNode;\n      this.last.prev = this.first;\n      this.first.next = newNode;\n    } else {\n      newNode.prev = this.last;\n      this.last.next = newNode;\n      this.last = newNode;\n    }\n    return true;\n  }\n  dequeue() {\n    if (!this.first) return null;\n    if (this.first === this.last) {\n      const target2 = this.first;\n      this.first = null;\n      this.last = null;\n      return target2.value;\n    }\n    const target = this.first;\n    this.first = target.next;\n    return target.value;\n  }\n};\n\n// pure.ts\nvar JS = class {\n  generateSecretKey() {\n    return schnorr.utils.randomPrivateKey();\n  }\n  getPublicKey(secretKey) {\n    return bytesToHex(schnorr.getPublicKey(secretKey));\n  }\n  finalizeEvent(t, secretKey) {\n    const event = t;\n    event.pubkey = bytesToHex(schnorr.getPublicKey(secretKey));\n    event.id = getEventHash(event);\n    event.sig = bytesToHex(schnorr.sign(getEventHash(event), secretKey));\n    event[verifiedSymbol] = true;\n    return event;\n  }\n  verifyEvent(event) {\n    if (typeof event[verifiedSymbol] === \"boolean\") return event[verifiedSymbol];\n    const hash = getEventHash(event);\n    if (hash !== event.id) {\n      event[verifiedSymbol] = false;\n      return false;\n    }\n    try {\n      const valid = schnorr.verify(event.sig, hash, event.pubkey);\n      event[verifiedSymbol] = valid;\n      return valid;\n    } catch (err) {\n      event[verifiedSymbol] = false;\n      return false;\n    }\n  }\n};\nfunction serializeEvent(evt) {\n  if (!validateEvent(evt)) throw new Error(\"can't serialize event with wrong or missing properties\");\n  return JSON.stringify([0, evt.pubkey, evt.created_at, evt.kind, evt.tags, evt.content]);\n}\nfunction getEventHash(event) {\n  let eventHash = sha256(utf8Encoder.encode(serializeEvent(event)));\n  return bytesToHex(eventHash);\n}\nvar i = new JS();\nvar generateSecretKey = i.generateSecretKey;\nvar getPublicKey = i.getPublicKey;\nvar finalizeEvent = i.finalizeEvent;\nvar verifyEvent = i.verifyEvent;\n\n// kinds.ts\nvar kinds_exports = {};\n__export(kinds_exports, {\n  Application: () => Application,\n  BadgeAward: () => BadgeAward,\n  BadgeDefinition: () => BadgeDefinition,\n  BlockedRelaysList: () => BlockedRelaysList,\n  BookmarkList: () => BookmarkList,\n  Bookmarksets: () => Bookmarksets,\n  Calendar: () => Calendar,\n  CalendarEventRSVP: () => CalendarEventRSVP,\n  ChannelCreation: () => ChannelCreation,\n  ChannelHideMessage: () => ChannelHideMessage,\n  ChannelMessage: () => ChannelMessage,\n  ChannelMetadata: () => ChannelMetadata,\n  ChannelMuteUser: () => ChannelMuteUser,\n  ClassifiedListing: () => ClassifiedListing,\n  ClientAuth: () => ClientAuth,\n  CommunitiesList: () => CommunitiesList,\n  CommunityDefinition: () => CommunityDefinition,\n  CommunityPostApproval: () => CommunityPostApproval,\n  Contacts: () => Contacts,\n  CreateOrUpdateProduct: () => CreateOrUpdateProduct,\n  CreateOrUpdateStall: () => CreateOrUpdateStall,\n  Curationsets: () => Curationsets,\n  Date: () => Date2,\n  DraftClassifiedListing: () => DraftClassifiedListing,\n  DraftLong: () => DraftLong,\n  Emojisets: () => Emojisets,\n  EncryptedDirectMessage: () => EncryptedDirectMessage,\n  EncryptedDirectMessages: () => EncryptedDirectMessages,\n  EventDeletion: () => EventDeletion,\n  FileMetadata: () => FileMetadata,\n  FileServerPreference: () => FileServerPreference,\n  Followsets: () => Followsets,\n  GenericRepost: () => GenericRepost,\n  Genericlists: () => Genericlists,\n  HTTPAuth: () => HTTPAuth,\n  Handlerinformation: () => Handlerinformation,\n  Handlerrecommendation: () => Handlerrecommendation,\n  Highlights: () => Highlights,\n  InterestsList: () => InterestsList,\n  Interestsets: () => Interestsets,\n  JobFeedback: () => JobFeedback,\n  JobRequest: () => JobRequest,\n  JobResult: () => JobResult,\n  Label: () => Label,\n  LightningPubRPC: () => LightningPubRPC,\n  LiveChatMessage: () => LiveChatMessage,\n  LiveEvent: () => LiveEvent,\n  LongFormArticle: () => LongFormArticle,\n  Metadata: () => Metadata,\n  Mutelist: () => Mutelist,\n  NWCWalletInfo: () => NWCWalletInfo,\n  NWCWalletRequest: () => NWCWalletRequest,\n  NWCWalletResponse: () => NWCWalletResponse,\n  NostrConnect: () => NostrConnect,\n  OpenTimestamps: () => OpenTimestamps,\n  Pinlist: () => Pinlist,\n  ProblemTracker: () => ProblemTracker,\n  ProfileBadges: () => ProfileBadges,\n  PublicChatsList: () => PublicChatsList,\n  Reaction: () => Reaction,\n  RecommendRelay: () => RecommendRelay,\n  RelayList: () => RelayList,\n  Relaysets: () => Relaysets,\n  Report: () => Report,\n  Reporting: () => Reporting,\n  Repost: () => Repost,\n  SearchRelaysList: () => SearchRelaysList,\n  ShortTextNote: () => ShortTextNote,\n  Time: () => Time,\n  UserEmojiList: () => UserEmojiList,\n  UserStatuses: () => UserStatuses,\n  Zap: () => Zap,\n  ZapGoal: () => ZapGoal,\n  ZapRequest: () => ZapRequest,\n  classifyKind: () => classifyKind,\n  isEphemeralKind: () => isEphemeralKind,\n  isParameterizedReplaceableKind: () => isParameterizedReplaceableKind,\n  isRegularKind: () => isRegularKind,\n  isReplaceableKind: () => isReplaceableKind\n});\nfunction isRegularKind(kind) {\n  return 1e3 <= kind && kind < 1e4 || [1, 2, 4, 5, 6, 7, 8, 16, 40, 41, 42, 43, 44].includes(kind);\n}\nfunction isReplaceableKind(kind) {\n  return [0, 3].includes(kind) || 1e4 <= kind && kind < 2e4;\n}\nfunction isEphemeralKind(kind) {\n  return 2e4 <= kind && kind < 3e4;\n}\nfunction isParameterizedReplaceableKind(kind) {\n  return 3e4 <= kind && kind < 4e4;\n}\nfunction classifyKind(kind) {\n  if (isRegularKind(kind)) return \"regular\";\n  if (isReplaceableKind(kind)) return \"replaceable\";\n  if (isEphemeralKind(kind)) return \"ephemeral\";\n  if (isParameterizedReplaceableKind(kind)) return \"parameterized\";\n  return \"unknown\";\n}\nvar Metadata = 0;\nvar ShortTextNote = 1;\nvar RecommendRelay = 2;\nvar Contacts = 3;\nvar EncryptedDirectMessage = 4;\nvar EncryptedDirectMessages = 4;\nvar EventDeletion = 5;\nvar Repost = 6;\nvar Reaction = 7;\nvar BadgeAward = 8;\nvar GenericRepost = 16;\nvar ChannelCreation = 40;\nvar ChannelMetadata = 41;\nvar ChannelMessage = 42;\nvar ChannelHideMessage = 43;\nvar ChannelMuteUser = 44;\nvar OpenTimestamps = 1040;\nvar FileMetadata = 1063;\nvar LiveChatMessage = 1311;\nvar ProblemTracker = 1971;\nvar Report = 1984;\nvar Reporting = 1984;\nvar Label = 1985;\nvar CommunityPostApproval = 4550;\nvar JobRequest = 5999;\nvar JobResult = 6999;\nvar JobFeedback = 7e3;\nvar ZapGoal = 9041;\nvar ZapRequest = 9734;\nvar Zap = 9735;\nvar Highlights = 9802;\nvar Mutelist = 1e4;\nvar Pinlist = 10001;\nvar RelayList = 10002;\nvar BookmarkList = 10003;\nvar CommunitiesList = 10004;\nvar PublicChatsList = 10005;\nvar BlockedRelaysList = 10006;\nvar SearchRelaysList = 10007;\nvar InterestsList = 10015;\nvar UserEmojiList = 10030;\nvar FileServerPreference = 10096;\nvar NWCWalletInfo = 13194;\nvar LightningPubRPC = 21e3;\nvar ClientAuth = 22242;\nvar NWCWalletRequest = 23194;\nvar NWCWalletResponse = 23195;\nvar NostrConnect = 24133;\nvar HTTPAuth = 27235;\nvar Followsets = 3e4;\nvar Genericlists = 30001;\nvar Relaysets = 30002;\nvar Bookmarksets = 30003;\nvar Curationsets = 30004;\nvar ProfileBadges = 30008;\nvar BadgeDefinition = 30009;\nvar Interestsets = 30015;\nvar CreateOrUpdateStall = 30017;\nvar CreateOrUpdateProduct = 30018;\nvar LongFormArticle = 30023;\nvar DraftLong = 30024;\nvar Emojisets = 30030;\nvar Application = 30078;\nvar LiveEvent = 30311;\nvar UserStatuses = 30315;\nvar ClassifiedListing = 30402;\nvar DraftClassifiedListing = 30403;\nvar Date2 = 31922;\nvar Time = 31923;\nvar Calendar = 31924;\nvar CalendarEventRSVP = 31925;\nvar Handlerrecommendation = 31989;\nvar Handlerinformation = 31990;\nvar CommunityDefinition = 34550;\n\n// filter.ts\nfunction matchFilter(filter, event) {\n  if (filter.ids && filter.ids.indexOf(event.id) === -1) {\n    if (!filter.ids.some(prefix => event.id.startsWith(prefix))) {\n      return false;\n    }\n  }\n  if (filter.kinds && filter.kinds.indexOf(event.kind) === -1) return false;\n  if (filter.authors && filter.authors.indexOf(event.pubkey) === -1) {\n    if (!filter.authors.some(prefix => event.pubkey.startsWith(prefix))) {\n      return false;\n    }\n  }\n  for (let f in filter) {\n    if (f[0] === \"#\") {\n      let tagName = f.slice(1);\n      let values = filter[`#${tagName}`];\n      if (values && !event.tags.find(([t, v]) => t === f.slice(1) && values.indexOf(v) !== -1)) return false;\n    }\n  }\n  if (filter.since && event.created_at < filter.since) return false;\n  if (filter.until && event.created_at > filter.until) return false;\n  return true;\n}\nfunction matchFilters(filters, event) {\n  for (let i2 = 0; i2 < filters.length; i2++) {\n    if (matchFilter(filters[i2], event)) return true;\n  }\n  return false;\n}\nfunction mergeFilters(...filters) {\n  let result = {};\n  for (let i2 = 0; i2 < filters.length; i2++) {\n    let filter = filters[i2];\n    Object.entries(filter).forEach(([property, values]) => {\n      if (property === \"kinds\" || property === \"ids\" || property === \"authors\" || property[0] === \"#\") {\n        result[property] = result[property] || [];\n        for (let v = 0; v < values.length; v++) {\n          let value = values[v];\n          if (!result[property].includes(value)) result[property].push(value);\n        }\n      }\n    });\n    if (filter.limit && (!result.limit || filter.limit > result.limit)) result.limit = filter.limit;\n    if (filter.until && (!result.until || filter.until > result.until)) result.until = filter.until;\n    if (filter.since && (!result.since || filter.since < result.since)) result.since = filter.since;\n  }\n  return result;\n}\nfunction getFilterLimit(filter) {\n  if (filter.ids && !filter.ids.length) return 0;\n  if (filter.kinds && !filter.kinds.length) return 0;\n  if (filter.authors && !filter.authors.length) return 0;\n  return Math.min(Math.max(0, filter.limit ?? Infinity), filter.ids?.length ?? Infinity, filter.authors?.length && filter.kinds?.every(kind => isReplaceableKind(kind)) ? filter.authors.length * filter.kinds.length : Infinity);\n}\n\n// fakejson.ts\nvar fakejson_exports = {};\n__export(fakejson_exports, {\n  getHex64: () => getHex64,\n  getInt: () => getInt,\n  getSubscriptionId: () => getSubscriptionId,\n  matchEventId: () => matchEventId,\n  matchEventKind: () => matchEventKind,\n  matchEventPubkey: () => matchEventPubkey\n});\nfunction getHex64(json, field) {\n  let len = field.length + 3;\n  let idx = json.indexOf(`\"${field}\":`) + len;\n  let s = json.slice(idx).indexOf(`\"`) + idx + 1;\n  return json.slice(s, s + 64);\n}\nfunction getInt(json, field) {\n  let len = field.length;\n  let idx = json.indexOf(`\"${field}\":`) + len + 3;\n  let sliced = json.slice(idx);\n  let end = Math.min(sliced.indexOf(\",\"), sliced.indexOf(\"}\"));\n  return parseInt(sliced.slice(0, end), 10);\n}\nfunction getSubscriptionId(json) {\n  let idx = json.slice(0, 22).indexOf(`\"EVENT\"`);\n  if (idx === -1) return null;\n  let pstart = json.slice(idx + 7 + 1).indexOf(`\"`);\n  if (pstart === -1) return null;\n  let start = idx + 7 + 1 + pstart;\n  let pend = json.slice(start + 1, 80).indexOf(`\"`);\n  if (pend === -1) return null;\n  let end = start + 1 + pend;\n  return json.slice(start + 1, end);\n}\nfunction matchEventId(json, id) {\n  return id === getHex64(json, \"id\");\n}\nfunction matchEventPubkey(json, pubkey) {\n  return pubkey === getHex64(json, \"pubkey\");\n}\nfunction matchEventKind(json, kind) {\n  return kind === getInt(json, \"kind\");\n}\n\n// nip42.ts\nvar nip42_exports = {};\n__export(nip42_exports, {\n  makeAuthEvent: () => makeAuthEvent\n});\nfunction makeAuthEvent(relayURL, challenge) {\n  return {\n    kind: ClientAuth,\n    created_at: Math.floor(Date.now() / 1e3),\n    tags: [[\"relay\", relayURL], [\"challenge\", challenge]],\n    content: \"\"\n  };\n}\n\n// helpers.ts\nasync function yieldThread() {\n  return new Promise(resolve => {\n    const ch = new MessageChannel();\n    const handler = () => {\n      ch.port1.removeEventListener(\"message\", handler);\n      resolve();\n    };\n    ch.port1.addEventListener(\"message\", handler);\n    ch.port2.postMessage(0);\n    ch.port1.start();\n  });\n}\nvar alwaysTrue = t => {\n  t[verifiedSymbol] = true;\n  return true;\n};\n\n// abstract-relay.ts\nvar AbstractRelay = class {\n  url;\n  _connected = false;\n  onclose = null;\n  onnotice = msg => console.debug(`NOTICE from ${this.url}: ${msg}`);\n  baseEoseTimeout = 4400;\n  connectionTimeout = 4400;\n  openSubs = /* @__PURE__ */new Map();\n  connectionTimeoutHandle;\n  connectionPromise;\n  openCountRequests = /* @__PURE__ */new Map();\n  openEventPublishes = /* @__PURE__ */new Map();\n  ws;\n  incomingMessageQueue = new Queue();\n  queueRunning = false;\n  challenge;\n  serial = 0;\n  verifyEvent;\n  constructor(url, opts) {\n    this.url = normalizeURL(url);\n    this.verifyEvent = opts.verifyEvent;\n  }\n  static async connect(url, opts) {\n    const relay = new AbstractRelay(url, opts);\n    await relay.connect();\n    return relay;\n  }\n  closeAllSubscriptions(reason) {\n    for (let [_, sub] of this.openSubs) {\n      sub.close(reason);\n    }\n    this.openSubs.clear();\n    for (let [_, ep] of this.openEventPublishes) {\n      ep.reject(new Error(reason));\n    }\n    this.openEventPublishes.clear();\n    for (let [_, cr] of this.openCountRequests) {\n      cr.reject(new Error(reason));\n    }\n    this.openCountRequests.clear();\n  }\n  get connected() {\n    return this._connected;\n  }\n  async connect() {\n    if (this.connectionPromise) return this.connectionPromise;\n    this.challenge = void 0;\n    this.connectionPromise = new Promise((resolve, reject) => {\n      this.connectionTimeoutHandle = setTimeout(() => {\n        reject(\"connection timed out\");\n        this.connectionPromise = void 0;\n        this.onclose?.();\n        this.closeAllSubscriptions(\"relay connection timed out\");\n      }, this.connectionTimeout);\n      try {\n        this.ws = new WebSocket(this.url);\n      } catch (err) {\n        reject(err);\n        return;\n      }\n      this.ws.onopen = () => {\n        clearTimeout(this.connectionTimeoutHandle);\n        this._connected = true;\n        resolve();\n      };\n      this.ws.onerror = ev => {\n        reject(ev.message);\n        if (this._connected) {\n          this.onclose?.();\n          this.closeAllSubscriptions(\"relay connection errored\");\n          this._connected = false;\n        }\n      };\n      this.ws.onclose = async () => {\n        this.connectionPromise = void 0;\n        this.onclose?.();\n        this.closeAllSubscriptions(\"relay connection closed\");\n        this._connected = false;\n      };\n      this.ws.onmessage = this._onmessage.bind(this);\n    });\n    return this.connectionPromise;\n  }\n  async runQueue() {\n    this.queueRunning = true;\n    while (true) {\n      if (false === this.handleNext()) {\n        break;\n      }\n      await yieldThread();\n    }\n    this.queueRunning = false;\n  }\n  handleNext() {\n    const json = this.incomingMessageQueue.dequeue();\n    if (!json) {\n      return false;\n    }\n    const subid = getSubscriptionId(json);\n    if (subid) {\n      const so = this.openSubs.get(subid);\n      if (!so) {\n        return;\n      }\n      const id = getHex64(json, \"id\");\n      const alreadyHave = so.alreadyHaveEvent?.(id);\n      so.receivedEvent?.(this, id);\n      if (alreadyHave) {\n        return;\n      }\n    }\n    try {\n      let data = JSON.parse(json);\n      switch (data[0]) {\n        case \"EVENT\":\n          {\n            const so = this.openSubs.get(data[1]);\n            const event = data[2];\n            if (this.verifyEvent(event) && matchFilters(so.filters, event)) {\n              so.onevent(event);\n            }\n            return;\n          }\n        case \"COUNT\":\n          {\n            const id = data[1];\n            const payload = data[2];\n            const cr = this.openCountRequests.get(id);\n            if (cr) {\n              cr.resolve(payload.count);\n              this.openCountRequests.delete(id);\n            }\n            return;\n          }\n        case \"EOSE\":\n          {\n            const so = this.openSubs.get(data[1]);\n            if (!so) return;\n            so.receivedEose();\n            return;\n          }\n        case \"OK\":\n          {\n            const id = data[1];\n            const ok = data[2];\n            const reason = data[3];\n            const ep = this.openEventPublishes.get(id);\n            if (ok) ep.resolve(reason);else ep.reject(new Error(reason));\n            this.openEventPublishes.delete(id);\n            return;\n          }\n        case \"CLOSED\":\n          {\n            const id = data[1];\n            const so = this.openSubs.get(id);\n            if (!so) return;\n            so.closed = true;\n            so.close(data[2]);\n            return;\n          }\n        case \"NOTICE\":\n          this.onnotice(data[1]);\n          return;\n        case \"AUTH\":\n          {\n            this.challenge = data[1];\n            return;\n          }\n      }\n    } catch (err) {\n      return;\n    }\n  }\n  async send(message) {\n    if (!this.connectionPromise) throw new Error(\"sending on closed connection\");\n    this.connectionPromise.then(() => {\n      this.ws?.send(message);\n    });\n  }\n  async auth(signAuthEvent) {\n    if (!this.challenge) throw new Error(\"can't perform auth, no challenge was received\");\n    const evt = await signAuthEvent(makeAuthEvent(this.url, this.challenge));\n    const ret = new Promise((resolve, reject) => {\n      this.openEventPublishes.set(evt.id, {\n        resolve,\n        reject\n      });\n    });\n    this.send('[\"AUTH\",' + JSON.stringify(evt) + \"]\");\n    return ret;\n  }\n  async publish(event) {\n    const ret = new Promise((resolve, reject) => {\n      this.openEventPublishes.set(event.id, {\n        resolve,\n        reject\n      });\n    });\n    this.send('[\"EVENT\",' + JSON.stringify(event) + \"]\");\n    return ret;\n  }\n  async count(filters, params) {\n    this.serial++;\n    const id = params?.id || \"count:\" + this.serial;\n    const ret = new Promise((resolve, reject) => {\n      this.openCountRequests.set(id, {\n        resolve,\n        reject\n      });\n    });\n    this.send('[\"COUNT\",\"' + id + '\",' + JSON.stringify(filters) + \"]\");\n    return ret;\n  }\n  subscribe(filters, params) {\n    const subscription = this.prepareSubscription(filters, params);\n    subscription.fire();\n    return subscription;\n  }\n  prepareSubscription(filters, params) {\n    this.serial++;\n    const id = params.id || \"sub:\" + this.serial;\n    const subscription = new Subscription(this, id, filters, params);\n    this.openSubs.set(id, subscription);\n    return subscription;\n  }\n  close() {\n    this.closeAllSubscriptions(\"relay connection closed by us\");\n    this._connected = false;\n    this.ws?.close();\n  }\n  _onmessage(ev) {\n    this.incomingMessageQueue.enqueue(ev.data);\n    if (!this.queueRunning) {\n      this.runQueue();\n    }\n  }\n};\nvar Subscription = class {\n  relay;\n  id;\n  closed = false;\n  eosed = false;\n  filters;\n  alreadyHaveEvent;\n  receivedEvent;\n  onevent;\n  oneose;\n  onclose;\n  eoseTimeout;\n  eoseTimeoutHandle;\n  constructor(relay, id, filters, params) {\n    this.relay = relay;\n    this.filters = filters;\n    this.id = id;\n    this.alreadyHaveEvent = params.alreadyHaveEvent;\n    this.receivedEvent = params.receivedEvent;\n    this.eoseTimeout = params.eoseTimeout || relay.baseEoseTimeout;\n    this.oneose = params.oneose;\n    this.onclose = params.onclose;\n    this.onevent = params.onevent || (event => {\n      console.warn(`onevent() callback not defined for subscription '${this.id}' in relay ${this.relay.url}. event received:`, event);\n    });\n  }\n  fire() {\n    this.relay.send('[\"REQ\",\"' + this.id + '\",' + JSON.stringify(this.filters).substring(1));\n    this.eoseTimeoutHandle = setTimeout(this.receivedEose.bind(this), this.eoseTimeout);\n  }\n  receivedEose() {\n    if (this.eosed) return;\n    clearTimeout(this.eoseTimeoutHandle);\n    this.eosed = true;\n    this.oneose?.();\n  }\n  close(reason = \"closed by caller\") {\n    if (!this.closed) {\n      this.relay.send('[\"CLOSE\",' + JSON.stringify(this.id) + \"]\");\n      this.closed = true;\n    }\n    this.relay.openSubs.delete(this.id);\n    this.onclose?.(reason);\n  }\n};\n\n// relay.ts\nfunction relayConnect(url) {\n  return Relay.connect(url);\n}\nvar Relay = class extends AbstractRelay {\n  constructor(url) {\n    super(url, {\n      verifyEvent\n    });\n  }\n  static async connect(url) {\n    const relay = new Relay(url);\n    await relay.connect();\n    return relay;\n  }\n};\n\n// abstract-pool.ts\nvar AbstractSimplePool = class {\n  relays = /* @__PURE__ */new Map();\n  seenOn = /* @__PURE__ */new Map();\n  trackRelays = false;\n  verifyEvent;\n  trustedRelayURLs = /* @__PURE__ */new Set();\n  constructor(opts) {\n    this.verifyEvent = opts.verifyEvent;\n  }\n  async ensureRelay(url, params) {\n    url = normalizeURL(url);\n    let relay = this.relays.get(url);\n    if (!relay) {\n      relay = new AbstractRelay(url, {\n        verifyEvent: this.trustedRelayURLs.has(url) ? alwaysTrue : this.verifyEvent\n      });\n      if (params?.connectionTimeout) relay.connectionTimeout = params.connectionTimeout;\n      this.relays.set(url, relay);\n    }\n    await relay.connect();\n    return relay;\n  }\n  close(relays) {\n    relays.map(normalizeURL).forEach(url => {\n      this.relays.get(url)?.close();\n    });\n  }\n  subscribeMany(relays, filters, params) {\n    if (this.trackRelays) {\n      params.receivedEvent = (relay, id) => {\n        let set = this.seenOn.get(id);\n        if (!set) {\n          set = /* @__PURE__ */new Set();\n          this.seenOn.set(id, set);\n        }\n        set.add(relay);\n      };\n    }\n    const _knownIds = /* @__PURE__ */new Set();\n    const subs = [];\n    const eosesReceived = [];\n    let handleEose = i2 => {\n      eosesReceived[i2] = true;\n      if (eosesReceived.filter(a => a).length === relays.length) {\n        params.oneose?.();\n        handleEose = () => {};\n      }\n    };\n    const closesReceived = [];\n    let handleClose = (i2, reason) => {\n      handleEose(i2);\n      closesReceived[i2] = reason;\n      if (closesReceived.filter(a => a).length === relays.length) {\n        params.onclose?.(closesReceived);\n        handleClose = () => {};\n      }\n    };\n    const localAlreadyHaveEventHandler = id => {\n      if (params.alreadyHaveEvent?.(id)) {\n        return true;\n      }\n      const have = _knownIds.has(id);\n      _knownIds.add(id);\n      return have;\n    };\n    const allOpened = Promise.all(relays.map(normalizeURL).map(async (url, i2, arr) => {\n      if (arr.indexOf(url) !== i2) {\n        handleClose(i2, \"duplicate url\");\n        return;\n      }\n      let relay;\n      try {\n        relay = await this.ensureRelay(url, {\n          connectionTimeout: params.maxWait ? Math.max(params.maxWait * 0.8, params.maxWait - 1e3) : void 0\n        });\n      } catch (err) {\n        handleClose(i2, err?.message || String(err));\n        return;\n      }\n      let subscription = relay.subscribe(filters, {\n        ...params,\n        oneose: () => handleEose(i2),\n        onclose: reason => handleClose(i2, reason),\n        alreadyHaveEvent: localAlreadyHaveEventHandler,\n        eoseTimeout: params.maxWait\n      });\n      subs.push(subscription);\n    }));\n    return {\n      async close() {\n        await allOpened;\n        subs.forEach(sub => {\n          sub.close();\n        });\n      }\n    };\n  }\n  subscribeManyEose(relays, filters, params) {\n    const subcloser = this.subscribeMany(relays, filters, {\n      ...params,\n      oneose() {\n        subcloser.close();\n      }\n    });\n    return subcloser;\n  }\n  async querySync(relays, filter, params) {\n    return new Promise(async resolve => {\n      const events = [];\n      this.subscribeManyEose(relays, [filter], {\n        ...params,\n        onevent(event) {\n          events.push(event);\n        },\n        onclose(_) {\n          resolve(events);\n        }\n      });\n    });\n  }\n  async get(relays, filter, params) {\n    filter.limit = 1;\n    const events = await this.querySync(relays, filter, params);\n    events.sort((a, b) => b.created_at - a.created_at);\n    return events[0] || null;\n  }\n  publish(relays, event) {\n    return relays.map(normalizeURL).map(async (url, i2, arr) => {\n      if (arr.indexOf(url) !== i2) {\n        return Promise.reject(\"duplicate url\");\n      }\n      let r = await this.ensureRelay(url);\n      return r.publish(event);\n    });\n  }\n};\n\n// pool.ts\nvar SimplePool = class extends AbstractSimplePool {\n  constructor() {\n    super({\n      verifyEvent\n    });\n  }\n};\n\n// nip19.ts\nvar nip19_exports = {};\n__export(nip19_exports, {\n  BECH32_REGEX: () => BECH32_REGEX,\n  decode: () => decode,\n  naddrEncode: () => naddrEncode,\n  neventEncode: () => neventEncode,\n  noteEncode: () => noteEncode,\n  nprofileEncode: () => nprofileEncode,\n  npubEncode: () => npubEncode,\n  nrelayEncode: () => nrelayEncode,\n  nsecEncode: () => nsecEncode\n});\nimport { bytesToHex as bytesToHex2, concatBytes, hexToBytes } from \"@noble/hashes/utils\";\nimport { bech32 } from \"@scure/base\";\nvar Bech32MaxSize = 5e3;\nvar BECH32_REGEX = /[\\x21-\\x7E]{1,83}1[023456789acdefghjklmnpqrstuvwxyz]{6,}/;\nfunction integerToUint8Array(number) {\n  const uint8Array = new Uint8Array(4);\n  uint8Array[0] = number >> 24 & 255;\n  uint8Array[1] = number >> 16 & 255;\n  uint8Array[2] = number >> 8 & 255;\n  uint8Array[3] = number & 255;\n  return uint8Array;\n}\nfunction decode(nip19) {\n  let {\n    prefix,\n    words\n  } = bech32.decode(nip19, Bech32MaxSize);\n  let data = new Uint8Array(bech32.fromWords(words));\n  switch (prefix) {\n    case \"nprofile\":\n      {\n        let tlv = parseTLV(data);\n        if (!tlv[0]?.[0]) throw new Error(\"missing TLV 0 for nprofile\");\n        if (tlv[0][0].length !== 32) throw new Error(\"TLV 0 should be 32 bytes\");\n        return {\n          type: \"nprofile\",\n          data: {\n            pubkey: bytesToHex2(tlv[0][0]),\n            relays: tlv[1] ? tlv[1].map(d => utf8Decoder.decode(d)) : []\n          }\n        };\n      }\n    case \"nevent\":\n      {\n        let tlv = parseTLV(data);\n        if (!tlv[0]?.[0]) throw new Error(\"missing TLV 0 for nevent\");\n        if (tlv[0][0].length !== 32) throw new Error(\"TLV 0 should be 32 bytes\");\n        if (tlv[2] && tlv[2][0].length !== 32) throw new Error(\"TLV 2 should be 32 bytes\");\n        if (tlv[3] && tlv[3][0].length !== 4) throw new Error(\"TLV 3 should be 4 bytes\");\n        return {\n          type: \"nevent\",\n          data: {\n            id: bytesToHex2(tlv[0][0]),\n            relays: tlv[1] ? tlv[1].map(d => utf8Decoder.decode(d)) : [],\n            author: tlv[2]?.[0] ? bytesToHex2(tlv[2][0]) : void 0,\n            kind: tlv[3]?.[0] ? parseInt(bytesToHex2(tlv[3][0]), 16) : void 0\n          }\n        };\n      }\n    case \"naddr\":\n      {\n        let tlv = parseTLV(data);\n        if (!tlv[0]?.[0]) throw new Error(\"missing TLV 0 for naddr\");\n        if (!tlv[2]?.[0]) throw new Error(\"missing TLV 2 for naddr\");\n        if (tlv[2][0].length !== 32) throw new Error(\"TLV 2 should be 32 bytes\");\n        if (!tlv[3]?.[0]) throw new Error(\"missing TLV 3 for naddr\");\n        if (tlv[3][0].length !== 4) throw new Error(\"TLV 3 should be 4 bytes\");\n        return {\n          type: \"naddr\",\n          data: {\n            identifier: utf8Decoder.decode(tlv[0][0]),\n            pubkey: bytesToHex2(tlv[2][0]),\n            kind: parseInt(bytesToHex2(tlv[3][0]), 16),\n            relays: tlv[1] ? tlv[1].map(d => utf8Decoder.decode(d)) : []\n          }\n        };\n      }\n    case \"nrelay\":\n      {\n        let tlv = parseTLV(data);\n        if (!tlv[0]?.[0]) throw new Error(\"missing TLV 0 for nrelay\");\n        return {\n          type: \"nrelay\",\n          data: utf8Decoder.decode(tlv[0][0])\n        };\n      }\n    case \"nsec\":\n      return {\n        type: prefix,\n        data\n      };\n    case \"npub\":\n    case \"note\":\n      return {\n        type: prefix,\n        data: bytesToHex2(data)\n      };\n    default:\n      throw new Error(`unknown prefix ${prefix}`);\n  }\n}\nfunction parseTLV(data) {\n  let result = {};\n  let rest = data;\n  while (rest.length > 0) {\n    let t = rest[0];\n    let l = rest[1];\n    let v = rest.slice(2, 2 + l);\n    rest = rest.slice(2 + l);\n    if (v.length < l) throw new Error(`not enough data to read on TLV ${t}`);\n    result[t] = result[t] || [];\n    result[t].push(v);\n  }\n  return result;\n}\nfunction nsecEncode(key) {\n  return encodeBytes(\"nsec\", key);\n}\nfunction npubEncode(hex) {\n  return encodeBytes(\"npub\", hexToBytes(hex));\n}\nfunction noteEncode(hex) {\n  return encodeBytes(\"note\", hexToBytes(hex));\n}\nfunction encodeBech32(prefix, data) {\n  let words = bech32.toWords(data);\n  return bech32.encode(prefix, words, Bech32MaxSize);\n}\nfunction encodeBytes(prefix, bytes) {\n  return encodeBech32(prefix, bytes);\n}\nfunction nprofileEncode(profile) {\n  let data = encodeTLV({\n    0: [hexToBytes(profile.pubkey)],\n    1: (profile.relays || []).map(url => utf8Encoder.encode(url))\n  });\n  return encodeBech32(\"nprofile\", data);\n}\nfunction neventEncode(event) {\n  let kindArray;\n  if (event.kind !== void 0) {\n    kindArray = integerToUint8Array(event.kind);\n  }\n  let data = encodeTLV({\n    0: [hexToBytes(event.id)],\n    1: (event.relays || []).map(url => utf8Encoder.encode(url)),\n    2: event.author ? [hexToBytes(event.author)] : [],\n    3: kindArray ? [new Uint8Array(kindArray)] : []\n  });\n  return encodeBech32(\"nevent\", data);\n}\nfunction naddrEncode(addr) {\n  let kind = new ArrayBuffer(4);\n  new DataView(kind).setUint32(0, addr.kind, false);\n  let data = encodeTLV({\n    0: [utf8Encoder.encode(addr.identifier)],\n    1: (addr.relays || []).map(url => utf8Encoder.encode(url)),\n    2: [hexToBytes(addr.pubkey)],\n    3: [new Uint8Array(kind)]\n  });\n  return encodeBech32(\"naddr\", data);\n}\nfunction nrelayEncode(url) {\n  let data = encodeTLV({\n    0: [utf8Encoder.encode(url)]\n  });\n  return encodeBech32(\"nrelay\", data);\n}\nfunction encodeTLV(tlv) {\n  let entries = [];\n  Object.entries(tlv).reverse().forEach(([t, vs]) => {\n    vs.forEach(v => {\n      let entry = new Uint8Array(v.length + 2);\n      entry.set([parseInt(t)], 0);\n      entry.set([v.length], 1);\n      entry.set(v, 2);\n      entries.push(entry);\n    });\n  });\n  return concatBytes(...entries);\n}\n\n// references.ts\nvar mentionRegex = /\\bnostr:((note|npub|naddr|nevent|nprofile)1\\w+)\\b|#\\[(\\d+)\\]/g;\nfunction parseReferences(evt) {\n  let references = [];\n  for (let ref of evt.content.matchAll(mentionRegex)) {\n    if (ref[2]) {\n      try {\n        let {\n          type,\n          data\n        } = decode(ref[1]);\n        switch (type) {\n          case \"npub\":\n            {\n              references.push({\n                text: ref[0],\n                profile: {\n                  pubkey: data,\n                  relays: []\n                }\n              });\n              break;\n            }\n          case \"nprofile\":\n            {\n              references.push({\n                text: ref[0],\n                profile: data\n              });\n              break;\n            }\n          case \"note\":\n            {\n              references.push({\n                text: ref[0],\n                event: {\n                  id: data,\n                  relays: []\n                }\n              });\n              break;\n            }\n          case \"nevent\":\n            {\n              references.push({\n                text: ref[0],\n                event: data\n              });\n              break;\n            }\n          case \"naddr\":\n            {\n              references.push({\n                text: ref[0],\n                address: data\n              });\n              break;\n            }\n        }\n      } catch (err) {}\n    } else if (ref[3]) {\n      let idx = parseInt(ref[3], 10);\n      let tag = evt.tags[idx];\n      if (!tag) continue;\n      switch (tag[0]) {\n        case \"p\":\n          {\n            references.push({\n              text: ref[0],\n              profile: {\n                pubkey: tag[1],\n                relays: tag[2] ? [tag[2]] : []\n              }\n            });\n            break;\n          }\n        case \"e\":\n          {\n            references.push({\n              text: ref[0],\n              event: {\n                id: tag[1],\n                relays: tag[2] ? [tag[2]] : []\n              }\n            });\n            break;\n          }\n        case \"a\":\n          {\n            try {\n              let [kind, pubkey, identifier] = tag[1].split(\":\");\n              references.push({\n                text: ref[0],\n                address: {\n                  identifier,\n                  pubkey,\n                  kind: parseInt(kind, 10),\n                  relays: tag[2] ? [tag[2]] : []\n                }\n              });\n            } catch (err) {}\n            break;\n          }\n      }\n    }\n  }\n  return references;\n}\n\n// nip04.ts\nvar nip04_exports = {};\n__export(nip04_exports, {\n  decrypt: () => decrypt,\n  encrypt: () => encrypt\n});\nimport { bytesToHex as bytesToHex3, randomBytes } from \"@noble/hashes/utils\";\nimport { secp256k1 } from \"@noble/curves/secp256k1\";\nimport { base64 } from \"@scure/base\";\nif (typeof crypto !== \"undefined\" && !crypto.subtle && crypto.webcrypto) {\n  crypto.subtle = crypto.webcrypto.subtle;\n}\nasync function encrypt(secretKey, pubkey, text) {\n  const privkey = secretKey instanceof Uint8Array ? bytesToHex3(secretKey) : secretKey;\n  const key = secp256k1.getSharedSecret(privkey, \"02\" + pubkey);\n  const normalizedKey = getNormalizedX(key);\n  let iv = Uint8Array.from(randomBytes(16));\n  let plaintext = utf8Encoder.encode(text);\n  let cryptoKey = await crypto.subtle.importKey(\"raw\", normalizedKey, {\n    name: \"AES-CBC\"\n  }, false, [\"encrypt\"]);\n  let ciphertext = await crypto.subtle.encrypt({\n    name: \"AES-CBC\",\n    iv\n  }, cryptoKey, plaintext);\n  let ctb64 = base64.encode(new Uint8Array(ciphertext));\n  let ivb64 = base64.encode(new Uint8Array(iv.buffer));\n  return `${ctb64}?iv=${ivb64}`;\n}\nasync function decrypt(secretKey, pubkey, data) {\n  const privkey = secretKey instanceof Uint8Array ? bytesToHex3(secretKey) : secretKey;\n  let [ctb64, ivb64] = data.split(\"?iv=\");\n  let key = secp256k1.getSharedSecret(privkey, \"02\" + pubkey);\n  let normalizedKey = getNormalizedX(key);\n  let cryptoKey = await crypto.subtle.importKey(\"raw\", normalizedKey, {\n    name: \"AES-CBC\"\n  }, false, [\"decrypt\"]);\n  let ciphertext = base64.decode(ctb64);\n  let iv = base64.decode(ivb64);\n  let plaintext = await crypto.subtle.decrypt({\n    name: \"AES-CBC\",\n    iv\n  }, cryptoKey, ciphertext);\n  let text = utf8Decoder.decode(plaintext);\n  return text;\n}\nfunction getNormalizedX(key) {\n  return key.slice(1, 33);\n}\n\n// nip05.ts\nvar nip05_exports = {};\n__export(nip05_exports, {\n  NIP05_REGEX: () => NIP05_REGEX,\n  queryProfile: () => queryProfile,\n  searchDomain: () => searchDomain,\n  useFetchImplementation: () => useFetchImplementation\n});\nvar NIP05_REGEX = /^(?:([\\w.+-]+)@)?([\\w.-]+)$/;\nvar _fetch;\ntry {\n  _fetch = fetch;\n} catch {}\nfunction useFetchImplementation(fetchImplementation) {\n  _fetch = fetchImplementation;\n}\nasync function searchDomain(domain, query = \"\") {\n  try {\n    let res = await (await _fetch(`https://${domain}/.well-known/nostr.json?name=${query}`)).json();\n    return res.names;\n  } catch (_) {\n    return {};\n  }\n}\nasync function queryProfile(fullname) {\n  const match = fullname.match(NIP05_REGEX);\n  if (!match) return null;\n  const [_, name = \"_\", domain] = match;\n  try {\n    const res = await _fetch(`https://${domain}/.well-known/nostr.json?name=${name}`);\n    const {\n      names,\n      relays\n    } = parseNIP05Result(await res.json());\n    const pubkey = names[name];\n    return pubkey ? {\n      pubkey,\n      relays: relays?.[pubkey]\n    } : null;\n  } catch (_e) {\n    return null;\n  }\n}\nfunction parseNIP05Result(json) {\n  const result = {\n    names: {}\n  };\n  for (const [name, pubkey] of Object.entries(json.names)) {\n    if (typeof name === \"string\" && typeof pubkey === \"string\") {\n      result.names[name] = pubkey;\n    }\n  }\n  if (json.relays) {\n    result.relays = {};\n    for (const [pubkey, relays] of Object.entries(json.relays)) {\n      if (typeof pubkey === \"string\" && Array.isArray(relays)) {\n        result.relays[pubkey] = relays.filter(relay => typeof relay === \"string\");\n      }\n    }\n  }\n  return result;\n}\n\n// nip10.ts\nvar nip10_exports = {};\n__export(nip10_exports, {\n  parse: () => parse\n});\nfunction parse(event) {\n  const result = {\n    reply: void 0,\n    root: void 0,\n    mentions: [],\n    profiles: []\n  };\n  const eTags = [];\n  for (const tag of event.tags) {\n    if (tag[0] === \"e\" && tag[1]) {\n      eTags.push(tag);\n    }\n    if (tag[0] === \"p\" && tag[1]) {\n      result.profiles.push({\n        pubkey: tag[1],\n        relays: tag[2] ? [tag[2]] : []\n      });\n    }\n  }\n  for (let eTagIndex = 0; eTagIndex < eTags.length; eTagIndex++) {\n    const eTag = eTags[eTagIndex];\n    const [_, eTagEventId, eTagRelayUrl, eTagMarker] = eTag;\n    const eventPointer = {\n      id: eTagEventId,\n      relays: eTagRelayUrl ? [eTagRelayUrl] : []\n    };\n    const isFirstETag = eTagIndex === 0;\n    const isLastETag = eTagIndex === eTags.length - 1;\n    if (eTagMarker === \"root\") {\n      result.root = eventPointer;\n      continue;\n    }\n    if (eTagMarker === \"reply\") {\n      result.reply = eventPointer;\n      continue;\n    }\n    if (eTagMarker === \"mention\") {\n      result.mentions.push(eventPointer);\n      continue;\n    }\n    if (isFirstETag) {\n      result.root = eventPointer;\n      continue;\n    }\n    if (isLastETag) {\n      result.reply = eventPointer;\n      continue;\n    }\n    result.mentions.push(eventPointer);\n  }\n  return result;\n}\n\n// nip11.ts\nvar nip11_exports = {};\n__export(nip11_exports, {\n  fetchRelayInformation: () => fetchRelayInformation,\n  useFetchImplementation: () => useFetchImplementation2\n});\nvar _fetch2;\ntry {\n  _fetch2 = fetch;\n} catch {}\nfunction useFetchImplementation2(fetchImplementation) {\n  _fetch2 = fetchImplementation;\n}\nasync function fetchRelayInformation(url) {\n  return await (await fetch(url.replace(\"ws://\", \"http://\").replace(\"wss://\", \"https://\"), {\n    headers: {\n      Accept: \"application/nostr+json\"\n    }\n  })).json();\n}\n\n// nip13.ts\nvar nip13_exports = {};\n__export(nip13_exports, {\n  getPow: () => getPow,\n  minePow: () => minePow\n});\nfunction getPow(hex) {\n  let count = 0;\n  for (let i2 = 0; i2 < hex.length; i2++) {\n    const nibble = parseInt(hex[i2], 16);\n    if (nibble === 0) {\n      count += 4;\n    } else {\n      count += Math.clz32(nibble) - 28;\n      break;\n    }\n  }\n  return count;\n}\nfunction minePow(unsigned, difficulty) {\n  let count = 0;\n  const event = unsigned;\n  const tag = [\"nonce\", count.toString(), difficulty.toString()];\n  event.tags.push(tag);\n  while (true) {\n    const now = Math.floor(new Date().getTime() / 1e3);\n    if (now !== event.created_at) {\n      count = 0;\n      event.created_at = now;\n    }\n    tag[1] = (++count).toString();\n    event.id = getEventHash(event);\n    if (getPow(event.id) >= difficulty) {\n      break;\n    }\n  }\n  return event;\n}\n\n// nip18.ts\nvar nip18_exports = {};\n__export(nip18_exports, {\n  finishRepostEvent: () => finishRepostEvent,\n  getRepostedEvent: () => getRepostedEvent,\n  getRepostedEventPointer: () => getRepostedEventPointer\n});\nfunction finishRepostEvent(t, reposted, relayUrl, privateKey) {\n  return finalizeEvent({\n    kind: Repost,\n    tags: [...(t.tags ?? []), [\"e\", reposted.id, relayUrl], [\"p\", reposted.pubkey]],\n    content: t.content === \"\" ? \"\" : JSON.stringify(reposted),\n    created_at: t.created_at\n  }, privateKey);\n}\nfunction getRepostedEventPointer(event) {\n  if (event.kind !== Repost) {\n    return void 0;\n  }\n  let lastETag;\n  let lastPTag;\n  for (let i2 = event.tags.length - 1; i2 >= 0 && (lastETag === void 0 || lastPTag === void 0); i2--) {\n    const tag = event.tags[i2];\n    if (tag.length >= 2) {\n      if (tag[0] === \"e\" && lastETag === void 0) {\n        lastETag = tag;\n      } else if (tag[0] === \"p\" && lastPTag === void 0) {\n        lastPTag = tag;\n      }\n    }\n  }\n  if (lastETag === void 0) {\n    return void 0;\n  }\n  return {\n    id: lastETag[1],\n    relays: [lastETag[2], lastPTag?.[2]].filter(x => typeof x === \"string\"),\n    author: lastPTag?.[1]\n  };\n}\nfunction getRepostedEvent(event, {\n  skipVerification\n} = {}) {\n  const pointer = getRepostedEventPointer(event);\n  if (pointer === void 0 || event.content === \"\") {\n    return void 0;\n  }\n  let repostedEvent;\n  try {\n    repostedEvent = JSON.parse(event.content);\n  } catch (error) {\n    return void 0;\n  }\n  if (repostedEvent.id !== pointer.id) {\n    return void 0;\n  }\n  if (!skipVerification && !verifyEvent(repostedEvent)) {\n    return void 0;\n  }\n  return repostedEvent;\n}\n\n// nip21.ts\nvar nip21_exports = {};\n__export(nip21_exports, {\n  NOSTR_URI_REGEX: () => NOSTR_URI_REGEX,\n  parse: () => parse2,\n  test: () => test\n});\nvar NOSTR_URI_REGEX = new RegExp(`nostr:(${BECH32_REGEX.source})`);\nfunction test(value) {\n  return typeof value === \"string\" && new RegExp(`^${NOSTR_URI_REGEX.source}$`).test(value);\n}\nfunction parse2(uri) {\n  const match = uri.match(new RegExp(`^${NOSTR_URI_REGEX.source}$`));\n  if (!match) throw new Error(`Invalid Nostr URI: ${uri}`);\n  return {\n    uri: match[0],\n    value: match[1],\n    decoded: decode(match[1])\n  };\n}\n\n// nip25.ts\nvar nip25_exports = {};\n__export(nip25_exports, {\n  finishReactionEvent: () => finishReactionEvent,\n  getReactedEventPointer: () => getReactedEventPointer\n});\nfunction finishReactionEvent(t, reacted, privateKey) {\n  const inheritedTags = reacted.tags.filter(tag => tag.length >= 2 && (tag[0] === \"e\" || tag[0] === \"p\"));\n  return finalizeEvent({\n    ...t,\n    kind: Reaction,\n    tags: [...(t.tags ?? []), ...inheritedTags, [\"e\", reacted.id], [\"p\", reacted.pubkey]],\n    content: t.content ?? \"+\"\n  }, privateKey);\n}\nfunction getReactedEventPointer(event) {\n  if (event.kind !== Reaction) {\n    return void 0;\n  }\n  let lastETag;\n  let lastPTag;\n  for (let i2 = event.tags.length - 1; i2 >= 0 && (lastETag === void 0 || lastPTag === void 0); i2--) {\n    const tag = event.tags[i2];\n    if (tag.length >= 2) {\n      if (tag[0] === \"e\" && lastETag === void 0) {\n        lastETag = tag;\n      } else if (tag[0] === \"p\" && lastPTag === void 0) {\n        lastPTag = tag;\n      }\n    }\n  }\n  if (lastETag === void 0 || lastPTag === void 0) {\n    return void 0;\n  }\n  return {\n    id: lastETag[1],\n    relays: [lastETag[2], lastPTag[2]].filter(x => x !== void 0),\n    author: lastPTag[1]\n  };\n}\n\n// nip27.ts\nvar nip27_exports = {};\n__export(nip27_exports, {\n  matchAll: () => matchAll,\n  regex: () => regex,\n  replaceAll: () => replaceAll\n});\nvar regex = () => new RegExp(`\\\\b${NOSTR_URI_REGEX.source}\\\\b`, \"g\");\nfunction* matchAll(content) {\n  const matches = content.matchAll(regex());\n  for (const match of matches) {\n    try {\n      const [uri, value] = match;\n      yield {\n        uri,\n        value,\n        decoded: decode(value),\n        start: match.index,\n        end: match.index + uri.length\n      };\n    } catch (_e) {}\n  }\n}\nfunction replaceAll(content, replacer) {\n  return content.replaceAll(regex(), (uri, value) => {\n    return replacer({\n      uri,\n      value,\n      decoded: decode(value)\n    });\n  });\n}\n\n// nip28.ts\nvar nip28_exports = {};\n__export(nip28_exports, {\n  channelCreateEvent: () => channelCreateEvent,\n  channelHideMessageEvent: () => channelHideMessageEvent,\n  channelMessageEvent: () => channelMessageEvent,\n  channelMetadataEvent: () => channelMetadataEvent,\n  channelMuteUserEvent: () => channelMuteUserEvent\n});\nvar channelCreateEvent = (t, privateKey) => {\n  let content;\n  if (typeof t.content === \"object\") {\n    content = JSON.stringify(t.content);\n  } else if (typeof t.content === \"string\") {\n    content = t.content;\n  } else {\n    return void 0;\n  }\n  return finalizeEvent({\n    kind: ChannelCreation,\n    tags: [...(t.tags ?? [])],\n    content,\n    created_at: t.created_at\n  }, privateKey);\n};\nvar channelMetadataEvent = (t, privateKey) => {\n  let content;\n  if (typeof t.content === \"object\") {\n    content = JSON.stringify(t.content);\n  } else if (typeof t.content === \"string\") {\n    content = t.content;\n  } else {\n    return void 0;\n  }\n  return finalizeEvent({\n    kind: ChannelMetadata,\n    tags: [[\"e\", t.channel_create_event_id], ...(t.tags ?? [])],\n    content,\n    created_at: t.created_at\n  }, privateKey);\n};\nvar channelMessageEvent = (t, privateKey) => {\n  const tags = [[\"e\", t.channel_create_event_id, t.relay_url, \"root\"]];\n  if (t.reply_to_channel_message_event_id) {\n    tags.push([\"e\", t.reply_to_channel_message_event_id, t.relay_url, \"reply\"]);\n  }\n  return finalizeEvent({\n    kind: ChannelMessage,\n    tags: [...tags, ...(t.tags ?? [])],\n    content: t.content,\n    created_at: t.created_at\n  }, privateKey);\n};\nvar channelHideMessageEvent = (t, privateKey) => {\n  let content;\n  if (typeof t.content === \"object\") {\n    content = JSON.stringify(t.content);\n  } else if (typeof t.content === \"string\") {\n    content = t.content;\n  } else {\n    return void 0;\n  }\n  return finalizeEvent({\n    kind: ChannelHideMessage,\n    tags: [[\"e\", t.channel_message_event_id], ...(t.tags ?? [])],\n    content,\n    created_at: t.created_at\n  }, privateKey);\n};\nvar channelMuteUserEvent = (t, privateKey) => {\n  let content;\n  if (typeof t.content === \"object\") {\n    content = JSON.stringify(t.content);\n  } else if (typeof t.content === \"string\") {\n    content = t.content;\n  } else {\n    return void 0;\n  }\n  return finalizeEvent({\n    kind: ChannelMuteUser,\n    tags: [[\"p\", t.pubkey_to_mute], ...(t.tags ?? [])],\n    content,\n    created_at: t.created_at\n  }, privateKey);\n};\n\n// nip30.ts\nvar nip30_exports = {};\n__export(nip30_exports, {\n  EMOJI_SHORTCODE_REGEX: () => EMOJI_SHORTCODE_REGEX,\n  matchAll: () => matchAll2,\n  regex: () => regex2,\n  replaceAll: () => replaceAll2\n});\nvar EMOJI_SHORTCODE_REGEX = /:(\\w+):/;\nvar regex2 = () => new RegExp(`\\\\B${EMOJI_SHORTCODE_REGEX.source}\\\\B`, \"g\");\nfunction* matchAll2(content) {\n  const matches = content.matchAll(regex2());\n  for (const match of matches) {\n    try {\n      const [shortcode, name] = match;\n      yield {\n        shortcode,\n        name,\n        start: match.index,\n        end: match.index + shortcode.length\n      };\n    } catch (_e) {}\n  }\n}\nfunction replaceAll2(content, replacer) {\n  return content.replaceAll(regex2(), (shortcode, name) => {\n    return replacer({\n      shortcode,\n      name\n    });\n  });\n}\n\n// nip39.ts\nvar nip39_exports = {};\n__export(nip39_exports, {\n  useFetchImplementation: () => useFetchImplementation3,\n  validateGithub: () => validateGithub\n});\nvar _fetch3;\ntry {\n  _fetch3 = fetch;\n} catch {}\nfunction useFetchImplementation3(fetchImplementation) {\n  _fetch3 = fetchImplementation;\n}\nasync function validateGithub(pubkey, username, proof) {\n  try {\n    let res = await (await _fetch3(`https://gist.github.com/${username}/${proof}/raw`)).text();\n    return res === `Verifying that I control the following Nostr public key: ${pubkey}`;\n  } catch (_) {\n    return false;\n  }\n}\n\n// nip44.ts\nvar nip44_exports = {};\n__export(nip44_exports, {\n  default: () => nip44_default,\n  v2: () => v2\n});\nimport { chacha20 } from \"@noble/ciphers/chacha\";\nimport { ensureBytes, equalBytes } from \"@noble/ciphers/utils\";\nimport { secp256k1 as secp256k12 } from \"@noble/curves/secp256k1\";\nimport { extract as hkdf_extract, expand as hkdf_expand } from \"@noble/hashes/hkdf\";\nimport { hmac } from \"@noble/hashes/hmac\";\nimport { sha256 as sha2562 } from \"@noble/hashes/sha256\";\nimport { concatBytes as concatBytes2, randomBytes as randomBytes2, utf8ToBytes } from \"@noble/hashes/utils\";\nimport { base64 as base642 } from \"@scure/base\";\nvar decoder = new TextDecoder();\nvar u = {\n  minPlaintextSize: 1,\n  maxPlaintextSize: 65535,\n  utf8Encode: utf8ToBytes,\n  utf8Decode(bytes) {\n    return decoder.decode(bytes);\n  },\n  getConversationKey(privkeyA, pubkeyB) {\n    const sharedX = secp256k12.getSharedSecret(privkeyA, \"02\" + pubkeyB).subarray(1, 33);\n    return hkdf_extract(sha2562, sharedX, \"nip44-v2\");\n  },\n  getMessageKeys(conversationKey, nonce) {\n    ensureBytes(conversationKey, 32);\n    ensureBytes(nonce, 32);\n    const keys = hkdf_expand(sha2562, conversationKey, nonce, 76);\n    return {\n      chacha_key: keys.subarray(0, 32),\n      chacha_nonce: keys.subarray(32, 44),\n      hmac_key: keys.subarray(44, 76)\n    };\n  },\n  calcPaddedLen(len) {\n    if (!Number.isSafeInteger(len) || len < 1) throw new Error(\"expected positive integer\");\n    if (len <= 32) return 32;\n    const nextPower = 1 << Math.floor(Math.log2(len - 1)) + 1;\n    const chunk = nextPower <= 256 ? 32 : nextPower / 8;\n    return chunk * (Math.floor((len - 1) / chunk) + 1);\n  },\n  writeU16BE(num) {\n    if (!Number.isSafeInteger(num) || num < u.minPlaintextSize || num > u.maxPlaintextSize) throw new Error(\"invalid plaintext size: must be between 1 and 65535 bytes\");\n    const arr = new Uint8Array(2);\n    new DataView(arr.buffer).setUint16(0, num, false);\n    return arr;\n  },\n  pad(plaintext) {\n    const unpadded = u.utf8Encode(plaintext);\n    const unpaddedLen = unpadded.length;\n    const prefix = u.writeU16BE(unpaddedLen);\n    const suffix = new Uint8Array(u.calcPaddedLen(unpaddedLen) - unpaddedLen);\n    return concatBytes2(prefix, unpadded, suffix);\n  },\n  unpad(padded) {\n    const unpaddedLen = new DataView(padded.buffer).getUint16(0);\n    const unpadded = padded.subarray(2, 2 + unpaddedLen);\n    if (unpaddedLen < u.minPlaintextSize || unpaddedLen > u.maxPlaintextSize || unpadded.length !== unpaddedLen || padded.length !== 2 + u.calcPaddedLen(unpaddedLen)) throw new Error(\"invalid padding\");\n    return u.utf8Decode(unpadded);\n  },\n  hmacAad(key, message, aad) {\n    if (aad.length !== 32) throw new Error(\"AAD associated data must be 32 bytes\");\n    const combined = concatBytes2(aad, message);\n    return hmac(sha2562, key, combined);\n  },\n  decodePayload(payload) {\n    if (typeof payload !== \"string\") throw new Error(\"payload must be a valid string\");\n    const plen = payload.length;\n    if (plen < 132 || plen > 87472) throw new Error(\"invalid payload length: \" + plen);\n    if (payload[0] === \"#\") throw new Error(\"unknown encryption version\");\n    let data;\n    try {\n      data = base642.decode(payload);\n    } catch (error) {\n      throw new Error(\"invalid base64: \" + error.message);\n    }\n    const dlen = data.length;\n    if (dlen < 99 || dlen > 65603) throw new Error(\"invalid data length: \" + dlen);\n    const vers = data[0];\n    if (vers !== 2) throw new Error(\"unknown encryption version \" + vers);\n    return {\n      nonce: data.subarray(1, 33),\n      ciphertext: data.subarray(33, -32),\n      mac: data.subarray(-32)\n    };\n  }\n};\nfunction encrypt2(plaintext, conversationKey, nonce = randomBytes2(32)) {\n  const {\n    chacha_key,\n    chacha_nonce,\n    hmac_key\n  } = u.getMessageKeys(conversationKey, nonce);\n  const padded = u.pad(plaintext);\n  const ciphertext = chacha20(chacha_key, chacha_nonce, padded);\n  const mac = u.hmacAad(hmac_key, ciphertext, nonce);\n  return base642.encode(concatBytes2(new Uint8Array([2]), nonce, ciphertext, mac));\n}\nfunction decrypt2(payload, conversationKey) {\n  const {\n    nonce,\n    ciphertext,\n    mac\n  } = u.decodePayload(payload);\n  const {\n    chacha_key,\n    chacha_nonce,\n    hmac_key\n  } = u.getMessageKeys(conversationKey, nonce);\n  const calculatedMac = u.hmacAad(hmac_key, ciphertext, nonce);\n  if (!equalBytes(calculatedMac, mac)) throw new Error(\"invalid MAC\");\n  const padded = chacha20(chacha_key, chacha_nonce, ciphertext);\n  return u.unpad(padded);\n}\nvar v2 = {\n  utils: u,\n  encrypt: encrypt2,\n  decrypt: decrypt2\n};\nvar nip44_default = {\n  v2\n};\n\n// nip47.ts\nvar nip47_exports = {};\n__export(nip47_exports, {\n  makeNwcRequestEvent: () => makeNwcRequestEvent,\n  parseConnectionString: () => parseConnectionString\n});\nfunction parseConnectionString(connectionString) {\n  const {\n    pathname,\n    searchParams\n  } = new URL(connectionString);\n  const pubkey = pathname;\n  const relay = searchParams.get(\"relay\");\n  const secret = searchParams.get(\"secret\");\n  if (!pubkey || !relay || !secret) {\n    throw new Error(\"invalid connection string\");\n  }\n  return {\n    pubkey,\n    relay,\n    secret\n  };\n}\nasync function makeNwcRequestEvent(pubkey, secretKey, invoice) {\n  const content = {\n    method: \"pay_invoice\",\n    params: {\n      invoice\n    }\n  };\n  const encryptedContent = await encrypt(secretKey, pubkey, JSON.stringify(content));\n  const eventTemplate = {\n    kind: NWCWalletRequest,\n    created_at: Math.round(Date.now() / 1e3),\n    content: encryptedContent,\n    tags: [[\"p\", pubkey]]\n  };\n  return finalizeEvent(eventTemplate, secretKey);\n}\n\n// nip57.ts\nvar nip57_exports = {};\n__export(nip57_exports, {\n  getZapEndpoint: () => getZapEndpoint,\n  makeZapReceipt: () => makeZapReceipt,\n  makeZapRequest: () => makeZapRequest,\n  useFetchImplementation: () => useFetchImplementation4,\n  validateZapRequest: () => validateZapRequest\n});\nimport { bech32 as bech322 } from \"@scure/base\";\nvar _fetch4;\ntry {\n  _fetch4 = fetch;\n} catch {}\nfunction useFetchImplementation4(fetchImplementation) {\n  _fetch4 = fetchImplementation;\n}\nasync function getZapEndpoint(metadata) {\n  try {\n    let lnurl = \"\";\n    let {\n      lud06,\n      lud16\n    } = JSON.parse(metadata.content);\n    if (lud06) {\n      let {\n        words\n      } = bech322.decode(lud06, 1e3);\n      let data = bech322.fromWords(words);\n      lnurl = utf8Decoder.decode(data);\n    } else if (lud16) {\n      let [name, domain] = lud16.split(\"@\");\n      lnurl = new URL(`/.well-known/lnurlp/${name}`, `https://${domain}`).toString();\n    } else {\n      return null;\n    }\n    let res = await _fetch4(lnurl);\n    let body = await res.json();\n    if (body.allowsNostr && body.nostrPubkey) {\n      return body.callback;\n    }\n  } catch (err) {}\n  return null;\n}\nfunction makeZapRequest({\n  profile,\n  event,\n  amount,\n  relays,\n  comment = \"\"\n}) {\n  if (!amount) throw new Error(\"amount not given\");\n  if (!profile) throw new Error(\"profile not given\");\n  let zr = {\n    kind: 9734,\n    created_at: Math.round(Date.now() / 1e3),\n    content: comment,\n    tags: [[\"p\", profile], [\"amount\", amount.toString()], [\"relays\", ...relays]]\n  };\n  if (event) {\n    zr.tags.push([\"e\", event]);\n  }\n  return zr;\n}\nfunction validateZapRequest(zapRequestString) {\n  let zapRequest;\n  try {\n    zapRequest = JSON.parse(zapRequestString);\n  } catch (err) {\n    return \"Invalid zap request JSON.\";\n  }\n  if (!validateEvent(zapRequest)) return \"Zap request is not a valid Nostr event.\";\n  if (!verifyEvent(zapRequest)) return \"Invalid signature on zap request.\";\n  let p = zapRequest.tags.find(([t, v]) => t === \"p\" && v);\n  if (!p) return \"Zap request doesn't have a 'p' tag.\";\n  if (!p[1].match(/^[a-f0-9]{64}$/)) return \"Zap request 'p' tag is not valid hex.\";\n  let e = zapRequest.tags.find(([t, v]) => t === \"e\" && v);\n  if (e && !e[1].match(/^[a-f0-9]{64}$/)) return \"Zap request 'e' tag is not valid hex.\";\n  let relays = zapRequest.tags.find(([t, v]) => t === \"relays\" && v);\n  if (!relays) return \"Zap request doesn't have a 'relays' tag.\";\n  return null;\n}\nfunction makeZapReceipt({\n  zapRequest,\n  preimage,\n  bolt11,\n  paidAt\n}) {\n  let zr = JSON.parse(zapRequest);\n  let tagsFromZapRequest = zr.tags.filter(([t]) => t === \"e\" || t === \"p\" || t === \"a\");\n  let zap = {\n    kind: 9735,\n    created_at: Math.round(paidAt.getTime() / 1e3),\n    content: \"\",\n    tags: [...tagsFromZapRequest, [\"P\", zr.pubkey], [\"bolt11\", bolt11], [\"description\", zapRequest]]\n  };\n  if (preimage) {\n    zap.tags.push([\"preimage\", preimage]);\n  }\n  return zap;\n}\n\n// nip98.ts\nvar nip98_exports = {};\n__export(nip98_exports, {\n  getToken: () => getToken,\n  hashPayload: () => hashPayload,\n  unpackEventFromToken: () => unpackEventFromToken,\n  validateEvent: () => validateEvent2,\n  validateEventKind: () => validateEventKind,\n  validateEventMethodTag: () => validateEventMethodTag,\n  validateEventPayloadTag: () => validateEventPayloadTag,\n  validateEventTimestamp: () => validateEventTimestamp,\n  validateEventUrlTag: () => validateEventUrlTag,\n  validateToken: () => validateToken\n});\nimport { sha256 as sha2563 } from \"@noble/hashes/sha256\";\nimport { bytesToHex as bytesToHex4 } from \"@noble/hashes/utils\";\nimport { base64 as base643 } from \"@scure/base\";\nvar _authorizationScheme = \"Nostr \";\nasync function getToken(loginUrl, httpMethod, sign, includeAuthorizationScheme = false, payload) {\n  const event = {\n    kind: HTTPAuth,\n    tags: [[\"u\", loginUrl], [\"method\", httpMethod]],\n    created_at: Math.round(new Date().getTime() / 1e3),\n    content: \"\"\n  };\n  if (payload) {\n    event.tags.push([\"payload\", hashPayload(payload)]);\n  }\n  const signedEvent = await sign(event);\n  const authorizationScheme = includeAuthorizationScheme ? _authorizationScheme : \"\";\n  return authorizationScheme + base643.encode(utf8Encoder.encode(JSON.stringify(signedEvent)));\n}\nasync function validateToken(token, url, method) {\n  const event = await unpackEventFromToken(token).catch(error => {\n    throw error;\n  });\n  const valid = await validateEvent2(event, url, method).catch(error => {\n    throw error;\n  });\n  return valid;\n}\nasync function unpackEventFromToken(token) {\n  if (!token) {\n    throw new Error(\"Missing token\");\n  }\n  token = token.replace(_authorizationScheme, \"\");\n  const eventB64 = utf8Decoder.decode(base643.decode(token));\n  if (!eventB64 || eventB64.length === 0 || !eventB64.startsWith(\"{\")) {\n    throw new Error(\"Invalid token\");\n  }\n  const event = JSON.parse(eventB64);\n  return event;\n}\nfunction validateEventTimestamp(event) {\n  if (!event.created_at) {\n    return false;\n  }\n  return Math.round(new Date().getTime() / 1e3) - event.created_at < 60;\n}\nfunction validateEventKind(event) {\n  return event.kind === HTTPAuth;\n}\nfunction validateEventUrlTag(event, url) {\n  const urlTag = event.tags.find(t => t[0] === \"u\");\n  if (!urlTag) {\n    return false;\n  }\n  return urlTag.length > 0 && urlTag[1] === url;\n}\nfunction validateEventMethodTag(event, method) {\n  const methodTag = event.tags.find(t => t[0] === \"method\");\n  if (!methodTag) {\n    return false;\n  }\n  return methodTag.length > 0 && methodTag[1].toLowerCase() === method.toLowerCase();\n}\nfunction hashPayload(payload) {\n  const hash = sha2563(utf8Encoder.encode(JSON.stringify(payload)));\n  return bytesToHex4(hash);\n}\nfunction validateEventPayloadTag(event, payload) {\n  const payloadTag = event.tags.find(t => t[0] === \"payload\");\n  if (!payloadTag) {\n    return false;\n  }\n  const payloadHash = hashPayload(payload);\n  return payloadTag.length > 0 && payloadTag[1] === payloadHash;\n}\nasync function validateEvent2(event, url, method, body) {\n  if (!verifyEvent(event)) {\n    throw new Error(\"Invalid nostr event, signature invalid\");\n  }\n  if (!validateEventKind(event)) {\n    throw new Error(\"Invalid nostr event, kind invalid\");\n  }\n  if (!validateEventTimestamp(event)) {\n    throw new Error(\"Invalid nostr event, created_at timestamp invalid\");\n  }\n  if (!validateEventUrlTag(event, url)) {\n    throw new Error(\"Invalid nostr event, url tag invalid\");\n  }\n  if (!validateEventMethodTag(event, method)) {\n    throw new Error(\"Invalid nostr event, method tag invalid\");\n  }\n  if (Boolean(body) && typeof body === \"object\" && Object.keys(body).length > 0) {\n    if (!validateEventPayloadTag(event, body)) {\n      throw new Error(\"Invalid nostr event, payload tag does not match request body hash\");\n    }\n  }\n  return true;\n}\nexport { AbstractRelay, AbstractSimplePool, Relay, SimplePool, Subscription, finalizeEvent, fakejson_exports as fj, generateSecretKey, getEventHash, getFilterLimit, getPublicKey, kinds_exports as kinds, matchFilter, matchFilters, mergeFilters, nip04_exports as nip04, nip05_exports as nip05, nip10_exports as nip10, nip11_exports as nip11, nip13_exports as nip13, nip18_exports as nip18, nip19_exports as nip19, nip21_exports as nip21, nip25_exports as nip25, nip27_exports as nip27, nip28_exports as nip28, nip30_exports as nip30, nip39_exports as nip39, nip42_exports as nip42, nip44_exports as nip44, nip47_exports as nip47, nip57_exports as nip57, nip98_exports as nip98, parseReferences, relayConnect, serializeEvent, utils_exports as utils, validateEvent, verifiedSymbol, verifyEvent };","map":{"version":3,"names":["__defProp","Object","defineProperty","__export","target","all","name","get","enumerable","schnorr","bytesToHex","verifiedSymbol","Symbol","isRecord","obj","validateEvent","event","kind","content","created_at","pubkey","match","Array","isArray","tags","i2","length","tag","j","sha256","utils_exports","Queue","QueueNode","binarySearch","insertEventIntoAscendingList","insertEventIntoDescendingList","normalizeURL","utf8Decoder","utf8Encoder","TextDecoder","TextEncoder","url","indexOf","p","URL","pathname","replace","endsWith","slice","port","protocol","searchParams","sort","hash","toString","sortedArray","idx","found","b","id","splice","arr","compare","start","end","mid","Math","floor","cmp","value","next","prev","constructor","message","first","last","enqueue","newNode","dequeue","target2","JS","generateSecretKey","utils","randomPrivateKey","getPublicKey","secretKey","finalizeEvent","t","getEventHash","sig","sign","verifyEvent","valid","verify","err","serializeEvent","evt","Error","JSON","stringify","eventHash","encode","i","kinds_exports","Application","BadgeAward","BadgeDefinition","BlockedRelaysList","BookmarkList","Bookmarksets","Calendar","CalendarEventRSVP","ChannelCreation","ChannelHideMessage","ChannelMessage","ChannelMetadata","ChannelMuteUser","ClassifiedListing","ClientAuth","CommunitiesList","CommunityDefinition","CommunityPostApproval","Contacts","CreateOrUpdateProduct","CreateOrUpdateStall","Curationsets","Date","Date2","DraftClassifiedListing","DraftLong","Emojisets","EncryptedDirectMessage","EncryptedDirectMessages","EventDeletion","FileMetadata","FileServerPreference","Followsets","GenericRepost","Genericlists","HTTPAuth","Handlerinformation","Handlerrecommendation","Highlights","InterestsList","Interestsets","JobFeedback","JobRequest","JobResult","Label","LightningPubRPC","LiveChatMessage","LiveEvent","LongFormArticle","Metadata","Mutelist","NWCWalletInfo","NWCWalletRequest","NWCWalletResponse","NostrConnect","OpenTimestamps","Pinlist","ProblemTracker","ProfileBadges","PublicChatsList","Reaction","RecommendRelay","RelayList","Relaysets","Report","Reporting","Repost","SearchRelaysList","ShortTextNote","Time","UserEmojiList","UserStatuses","Zap","ZapGoal","ZapRequest","classifyKind","isEphemeralKind","isParameterizedReplaceableKind","isRegularKind","isReplaceableKind","includes","matchFilter","filter","ids","some","prefix","startsWith","kinds","authors","f","tagName","values","find","v","since","until","matchFilters","filters","mergeFilters","result","entries","forEach","property","push","limit","getFilterLimit","min","max","Infinity","every","fakejson_exports","getHex64","getInt","getSubscriptionId","matchEventId","matchEventKind","matchEventPubkey","json","field","len","s","sliced","parseInt","pstart","pend","nip42_exports","makeAuthEvent","relayURL","challenge","now","yieldThread","Promise","resolve","ch","MessageChannel","handler","port1","removeEventListener","addEventListener","port2","postMessage","alwaysTrue","AbstractRelay","_connected","onclose","onnotice","msg","console","debug","baseEoseTimeout","connectionTimeout","openSubs","Map","connectionTimeoutHandle","connectionPromise","openCountRequests","openEventPublishes","ws","incomingMessageQueue","queueRunning","serial","opts","connect","relay","closeAllSubscriptions","reason","_","sub","close","clear","ep","reject","cr","connected","setTimeout","WebSocket","onopen","clearTimeout","onerror","ev","onmessage","_onmessage","bind","runQueue","handleNext","subid","so","alreadyHave","alreadyHaveEvent","receivedEvent","data","parse","onevent","payload","count","delete","receivedEose","ok","closed","send","then","auth","signAuthEvent","ret","set","publish","params","subscribe","subscription","prepareSubscription","fire","Subscription","eosed","oneose","eoseTimeout","eoseTimeoutHandle","warn","substring","relayConnect","Relay","AbstractSimplePool","relays","seenOn","trackRelays","trustedRelayURLs","Set","ensureRelay","has","map","subscribeMany","add","_knownIds","subs","eosesReceived","handleEose","a","closesReceived","handleClose","localAlreadyHaveEventHandler","have","allOpened","maxWait","String","subscribeManyEose","subcloser","querySync","events","r","SimplePool","nip19_exports","BECH32_REGEX","decode","naddrEncode","neventEncode","noteEncode","nprofileEncode","npubEncode","nrelayEncode","nsecEncode","bytesToHex2","concatBytes","hexToBytes","bech32","Bech32MaxSize","integerToUint8Array","number","uint8Array","Uint8Array","nip19","words","fromWords","tlv","parseTLV","type","d","author","identifier","rest","l","key","encodeBytes","hex","encodeBech32","toWords","bytes","profile","encodeTLV","kindArray","addr","ArrayBuffer","DataView","setUint32","reverse","vs","entry","mentionRegex","parseReferences","references","ref","matchAll","text","address","split","nip04_exports","decrypt","encrypt","bytesToHex3","randomBytes","secp256k1","base64","crypto","subtle","webcrypto","privkey","getSharedSecret","normalizedKey","getNormalizedX","iv","from","plaintext","cryptoKey","importKey","ciphertext","ctb64","ivb64","buffer","nip05_exports","NIP05_REGEX","queryProfile","searchDomain","useFetchImplementation","_fetch","fetch","fetchImplementation","domain","query","res","names","fullname","parseNIP05Result","_e","nip10_exports","reply","root","mentions","profiles","eTags","eTagIndex","eTag","eTagEventId","eTagRelayUrl","eTagMarker","eventPointer","isFirstETag","isLastETag","nip11_exports","fetchRelayInformation","useFetchImplementation2","_fetch2","headers","Accept","nip13_exports","getPow","minePow","nibble","clz32","unsigned","difficulty","getTime","nip18_exports","finishRepostEvent","getRepostedEvent","getRepostedEventPointer","reposted","relayUrl","privateKey","lastETag","lastPTag","x","skipVerification","pointer","repostedEvent","error","nip21_exports","NOSTR_URI_REGEX","parse2","test","RegExp","source","uri","decoded","nip25_exports","finishReactionEvent","getReactedEventPointer","reacted","inheritedTags","nip27_exports","regex","replaceAll","matches","index","replacer","nip28_exports","channelCreateEvent","channelHideMessageEvent","channelMessageEvent","channelMetadataEvent","channelMuteUserEvent","channel_create_event_id","relay_url","reply_to_channel_message_event_id","channel_message_event_id","pubkey_to_mute","nip30_exports","EMOJI_SHORTCODE_REGEX","matchAll2","regex2","replaceAll2","shortcode","nip39_exports","useFetchImplementation3","validateGithub","_fetch3","username","proof","nip44_exports","default","nip44_default","v2","chacha20","ensureBytes","equalBytes","secp256k12","extract","hkdf_extract","expand","hkdf_expand","hmac","sha2562","concatBytes2","randomBytes2","utf8ToBytes","base642","decoder","u","minPlaintextSize","maxPlaintextSize","utf8Encode","utf8Decode","getConversationKey","privkeyA","pubkeyB","sharedX","subarray","getMessageKeys","conversationKey","nonce","keys","chacha_key","chacha_nonce","hmac_key","calcPaddedLen","Number","isSafeInteger","nextPower","log2","chunk","writeU16BE","num","setUint16","pad","unpadded","unpaddedLen","suffix","unpad","padded","getUint16","hmacAad","aad","combined","decodePayload","plen","dlen","vers","mac","encrypt2","decrypt2","calculatedMac","nip47_exports","makeNwcRequestEvent","parseConnectionString","connectionString","secret","invoice","method","encryptedContent","eventTemplate","round","nip57_exports","getZapEndpoint","makeZapReceipt","makeZapRequest","useFetchImplementation4","validateZapRequest","bech322","_fetch4","metadata","lnurl","lud06","lud16","body","allowsNostr","nostrPubkey","callback","amount","comment","zr","zapRequestString","zapRequest","e","preimage","bolt11","paidAt","tagsFromZapRequest","zap","nip98_exports","getToken","hashPayload","unpackEventFromToken","validateEvent2","validateEventKind","validateEventMethodTag","validateEventPayloadTag","validateEventTimestamp","validateEventUrlTag","validateToken","sha2563","bytesToHex4","base643","_authorizationScheme","loginUrl","httpMethod","includeAuthorizationScheme","signedEvent","authorizationScheme","token","catch","eventB64","urlTag","methodTag","toLowerCase","payloadTag","payloadHash","Boolean","fj","nip04","nip05","nip10","nip11","nip13","nip18","nip21","nip25","nip27","nip28","nip30","nip39","nip42","nip44","nip47","nip57","nip98"],"sources":["/Users/lance/myProject/nostr-client-web/node_modules/nostr-tools/lib/esm/index.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// pure.ts\nimport { schnorr } from \"@noble/curves/secp256k1\";\nimport { bytesToHex } from \"@noble/hashes/utils\";\n\n// core.ts\nvar verifiedSymbol = Symbol(\"verified\");\nvar isRecord = (obj) => obj instanceof Object;\nfunction validateEvent(event) {\n  if (!isRecord(event))\n    return false;\n  if (typeof event.kind !== \"number\")\n    return false;\n  if (typeof event.content !== \"string\")\n    return false;\n  if (typeof event.created_at !== \"number\")\n    return false;\n  if (typeof event.pubkey !== \"string\")\n    return false;\n  if (!event.pubkey.match(/^[a-f0-9]{64}$/))\n    return false;\n  if (!Array.isArray(event.tags))\n    return false;\n  for (let i2 = 0; i2 < event.tags.length; i2++) {\n    let tag = event.tags[i2];\n    if (!Array.isArray(tag))\n      return false;\n    for (let j = 0; j < tag.length; j++) {\n      if (typeof tag[j] === \"object\")\n        return false;\n    }\n  }\n  return true;\n}\n\n// pure.ts\nimport { sha256 } from \"@noble/hashes/sha256\";\n\n// utils.ts\nvar utils_exports = {};\n__export(utils_exports, {\n  Queue: () => Queue,\n  QueueNode: () => QueueNode,\n  binarySearch: () => binarySearch,\n  insertEventIntoAscendingList: () => insertEventIntoAscendingList,\n  insertEventIntoDescendingList: () => insertEventIntoDescendingList,\n  normalizeURL: () => normalizeURL,\n  utf8Decoder: () => utf8Decoder,\n  utf8Encoder: () => utf8Encoder\n});\nvar utf8Decoder = new TextDecoder(\"utf-8\");\nvar utf8Encoder = new TextEncoder();\nfunction normalizeURL(url) {\n  if (url.indexOf(\"://\") === -1)\n    url = \"wss://\" + url;\n  let p = new URL(url);\n  p.pathname = p.pathname.replace(/\\/+/g, \"/\");\n  if (p.pathname.endsWith(\"/\"))\n    p.pathname = p.pathname.slice(0, -1);\n  if (p.port === \"80\" && p.protocol === \"ws:\" || p.port === \"443\" && p.protocol === \"wss:\")\n    p.port = \"\";\n  p.searchParams.sort();\n  p.hash = \"\";\n  return p.toString();\n}\nfunction insertEventIntoDescendingList(sortedArray, event) {\n  const [idx, found] = binarySearch(sortedArray, (b) => {\n    if (event.id === b.id)\n      return 0;\n    if (event.created_at === b.created_at)\n      return -1;\n    return b.created_at - event.created_at;\n  });\n  if (!found) {\n    sortedArray.splice(idx, 0, event);\n  }\n  return sortedArray;\n}\nfunction insertEventIntoAscendingList(sortedArray, event) {\n  const [idx, found] = binarySearch(sortedArray, (b) => {\n    if (event.id === b.id)\n      return 0;\n    if (event.created_at === b.created_at)\n      return -1;\n    return event.created_at - b.created_at;\n  });\n  if (!found) {\n    sortedArray.splice(idx, 0, event);\n  }\n  return sortedArray;\n}\nfunction binarySearch(arr, compare) {\n  let start = 0;\n  let end = arr.length - 1;\n  while (start <= end) {\n    const mid = Math.floor((start + end) / 2);\n    const cmp = compare(arr[mid]);\n    if (cmp === 0) {\n      return [mid, true];\n    }\n    if (cmp < 0) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n  return [start, false];\n}\nvar QueueNode = class {\n  value;\n  next = null;\n  prev = null;\n  constructor(message) {\n    this.value = message;\n  }\n};\nvar Queue = class {\n  first;\n  last;\n  constructor() {\n    this.first = null;\n    this.last = null;\n  }\n  enqueue(value) {\n    const newNode = new QueueNode(value);\n    if (!this.last) {\n      this.first = newNode;\n      this.last = newNode;\n    } else if (this.last === this.first) {\n      this.last = newNode;\n      this.last.prev = this.first;\n      this.first.next = newNode;\n    } else {\n      newNode.prev = this.last;\n      this.last.next = newNode;\n      this.last = newNode;\n    }\n    return true;\n  }\n  dequeue() {\n    if (!this.first)\n      return null;\n    if (this.first === this.last) {\n      const target2 = this.first;\n      this.first = null;\n      this.last = null;\n      return target2.value;\n    }\n    const target = this.first;\n    this.first = target.next;\n    return target.value;\n  }\n};\n\n// pure.ts\nvar JS = class {\n  generateSecretKey() {\n    return schnorr.utils.randomPrivateKey();\n  }\n  getPublicKey(secretKey) {\n    return bytesToHex(schnorr.getPublicKey(secretKey));\n  }\n  finalizeEvent(t, secretKey) {\n    const event = t;\n    event.pubkey = bytesToHex(schnorr.getPublicKey(secretKey));\n    event.id = getEventHash(event);\n    event.sig = bytesToHex(schnorr.sign(getEventHash(event), secretKey));\n    event[verifiedSymbol] = true;\n    return event;\n  }\n  verifyEvent(event) {\n    if (typeof event[verifiedSymbol] === \"boolean\")\n      return event[verifiedSymbol];\n    const hash = getEventHash(event);\n    if (hash !== event.id) {\n      event[verifiedSymbol] = false;\n      return false;\n    }\n    try {\n      const valid = schnorr.verify(event.sig, hash, event.pubkey);\n      event[verifiedSymbol] = valid;\n      return valid;\n    } catch (err) {\n      event[verifiedSymbol] = false;\n      return false;\n    }\n  }\n};\nfunction serializeEvent(evt) {\n  if (!validateEvent(evt))\n    throw new Error(\"can't serialize event with wrong or missing properties\");\n  return JSON.stringify([0, evt.pubkey, evt.created_at, evt.kind, evt.tags, evt.content]);\n}\nfunction getEventHash(event) {\n  let eventHash = sha256(utf8Encoder.encode(serializeEvent(event)));\n  return bytesToHex(eventHash);\n}\nvar i = new JS();\nvar generateSecretKey = i.generateSecretKey;\nvar getPublicKey = i.getPublicKey;\nvar finalizeEvent = i.finalizeEvent;\nvar verifyEvent = i.verifyEvent;\n\n// kinds.ts\nvar kinds_exports = {};\n__export(kinds_exports, {\n  Application: () => Application,\n  BadgeAward: () => BadgeAward,\n  BadgeDefinition: () => BadgeDefinition,\n  BlockedRelaysList: () => BlockedRelaysList,\n  BookmarkList: () => BookmarkList,\n  Bookmarksets: () => Bookmarksets,\n  Calendar: () => Calendar,\n  CalendarEventRSVP: () => CalendarEventRSVP,\n  ChannelCreation: () => ChannelCreation,\n  ChannelHideMessage: () => ChannelHideMessage,\n  ChannelMessage: () => ChannelMessage,\n  ChannelMetadata: () => ChannelMetadata,\n  ChannelMuteUser: () => ChannelMuteUser,\n  ClassifiedListing: () => ClassifiedListing,\n  ClientAuth: () => ClientAuth,\n  CommunitiesList: () => CommunitiesList,\n  CommunityDefinition: () => CommunityDefinition,\n  CommunityPostApproval: () => CommunityPostApproval,\n  Contacts: () => Contacts,\n  CreateOrUpdateProduct: () => CreateOrUpdateProduct,\n  CreateOrUpdateStall: () => CreateOrUpdateStall,\n  Curationsets: () => Curationsets,\n  Date: () => Date2,\n  DraftClassifiedListing: () => DraftClassifiedListing,\n  DraftLong: () => DraftLong,\n  Emojisets: () => Emojisets,\n  EncryptedDirectMessage: () => EncryptedDirectMessage,\n  EncryptedDirectMessages: () => EncryptedDirectMessages,\n  EventDeletion: () => EventDeletion,\n  FileMetadata: () => FileMetadata,\n  FileServerPreference: () => FileServerPreference,\n  Followsets: () => Followsets,\n  GenericRepost: () => GenericRepost,\n  Genericlists: () => Genericlists,\n  HTTPAuth: () => HTTPAuth,\n  Handlerinformation: () => Handlerinformation,\n  Handlerrecommendation: () => Handlerrecommendation,\n  Highlights: () => Highlights,\n  InterestsList: () => InterestsList,\n  Interestsets: () => Interestsets,\n  JobFeedback: () => JobFeedback,\n  JobRequest: () => JobRequest,\n  JobResult: () => JobResult,\n  Label: () => Label,\n  LightningPubRPC: () => LightningPubRPC,\n  LiveChatMessage: () => LiveChatMessage,\n  LiveEvent: () => LiveEvent,\n  LongFormArticle: () => LongFormArticle,\n  Metadata: () => Metadata,\n  Mutelist: () => Mutelist,\n  NWCWalletInfo: () => NWCWalletInfo,\n  NWCWalletRequest: () => NWCWalletRequest,\n  NWCWalletResponse: () => NWCWalletResponse,\n  NostrConnect: () => NostrConnect,\n  OpenTimestamps: () => OpenTimestamps,\n  Pinlist: () => Pinlist,\n  ProblemTracker: () => ProblemTracker,\n  ProfileBadges: () => ProfileBadges,\n  PublicChatsList: () => PublicChatsList,\n  Reaction: () => Reaction,\n  RecommendRelay: () => RecommendRelay,\n  RelayList: () => RelayList,\n  Relaysets: () => Relaysets,\n  Report: () => Report,\n  Reporting: () => Reporting,\n  Repost: () => Repost,\n  SearchRelaysList: () => SearchRelaysList,\n  ShortTextNote: () => ShortTextNote,\n  Time: () => Time,\n  UserEmojiList: () => UserEmojiList,\n  UserStatuses: () => UserStatuses,\n  Zap: () => Zap,\n  ZapGoal: () => ZapGoal,\n  ZapRequest: () => ZapRequest,\n  classifyKind: () => classifyKind,\n  isEphemeralKind: () => isEphemeralKind,\n  isParameterizedReplaceableKind: () => isParameterizedReplaceableKind,\n  isRegularKind: () => isRegularKind,\n  isReplaceableKind: () => isReplaceableKind\n});\nfunction isRegularKind(kind) {\n  return 1e3 <= kind && kind < 1e4 || [1, 2, 4, 5, 6, 7, 8, 16, 40, 41, 42, 43, 44].includes(kind);\n}\nfunction isReplaceableKind(kind) {\n  return [0, 3].includes(kind) || 1e4 <= kind && kind < 2e4;\n}\nfunction isEphemeralKind(kind) {\n  return 2e4 <= kind && kind < 3e4;\n}\nfunction isParameterizedReplaceableKind(kind) {\n  return 3e4 <= kind && kind < 4e4;\n}\nfunction classifyKind(kind) {\n  if (isRegularKind(kind))\n    return \"regular\";\n  if (isReplaceableKind(kind))\n    return \"replaceable\";\n  if (isEphemeralKind(kind))\n    return \"ephemeral\";\n  if (isParameterizedReplaceableKind(kind))\n    return \"parameterized\";\n  return \"unknown\";\n}\nvar Metadata = 0;\nvar ShortTextNote = 1;\nvar RecommendRelay = 2;\nvar Contacts = 3;\nvar EncryptedDirectMessage = 4;\nvar EncryptedDirectMessages = 4;\nvar EventDeletion = 5;\nvar Repost = 6;\nvar Reaction = 7;\nvar BadgeAward = 8;\nvar GenericRepost = 16;\nvar ChannelCreation = 40;\nvar ChannelMetadata = 41;\nvar ChannelMessage = 42;\nvar ChannelHideMessage = 43;\nvar ChannelMuteUser = 44;\nvar OpenTimestamps = 1040;\nvar FileMetadata = 1063;\nvar LiveChatMessage = 1311;\nvar ProblemTracker = 1971;\nvar Report = 1984;\nvar Reporting = 1984;\nvar Label = 1985;\nvar CommunityPostApproval = 4550;\nvar JobRequest = 5999;\nvar JobResult = 6999;\nvar JobFeedback = 7e3;\nvar ZapGoal = 9041;\nvar ZapRequest = 9734;\nvar Zap = 9735;\nvar Highlights = 9802;\nvar Mutelist = 1e4;\nvar Pinlist = 10001;\nvar RelayList = 10002;\nvar BookmarkList = 10003;\nvar CommunitiesList = 10004;\nvar PublicChatsList = 10005;\nvar BlockedRelaysList = 10006;\nvar SearchRelaysList = 10007;\nvar InterestsList = 10015;\nvar UserEmojiList = 10030;\nvar FileServerPreference = 10096;\nvar NWCWalletInfo = 13194;\nvar LightningPubRPC = 21e3;\nvar ClientAuth = 22242;\nvar NWCWalletRequest = 23194;\nvar NWCWalletResponse = 23195;\nvar NostrConnect = 24133;\nvar HTTPAuth = 27235;\nvar Followsets = 3e4;\nvar Genericlists = 30001;\nvar Relaysets = 30002;\nvar Bookmarksets = 30003;\nvar Curationsets = 30004;\nvar ProfileBadges = 30008;\nvar BadgeDefinition = 30009;\nvar Interestsets = 30015;\nvar CreateOrUpdateStall = 30017;\nvar CreateOrUpdateProduct = 30018;\nvar LongFormArticle = 30023;\nvar DraftLong = 30024;\nvar Emojisets = 30030;\nvar Application = 30078;\nvar LiveEvent = 30311;\nvar UserStatuses = 30315;\nvar ClassifiedListing = 30402;\nvar DraftClassifiedListing = 30403;\nvar Date2 = 31922;\nvar Time = 31923;\nvar Calendar = 31924;\nvar CalendarEventRSVP = 31925;\nvar Handlerrecommendation = 31989;\nvar Handlerinformation = 31990;\nvar CommunityDefinition = 34550;\n\n// filter.ts\nfunction matchFilter(filter, event) {\n  if (filter.ids && filter.ids.indexOf(event.id) === -1) {\n    if (!filter.ids.some((prefix) => event.id.startsWith(prefix))) {\n      return false;\n    }\n  }\n  if (filter.kinds && filter.kinds.indexOf(event.kind) === -1)\n    return false;\n  if (filter.authors && filter.authors.indexOf(event.pubkey) === -1) {\n    if (!filter.authors.some((prefix) => event.pubkey.startsWith(prefix))) {\n      return false;\n    }\n  }\n  for (let f in filter) {\n    if (f[0] === \"#\") {\n      let tagName = f.slice(1);\n      let values = filter[`#${tagName}`];\n      if (values && !event.tags.find(([t, v]) => t === f.slice(1) && values.indexOf(v) !== -1))\n        return false;\n    }\n  }\n  if (filter.since && event.created_at < filter.since)\n    return false;\n  if (filter.until && event.created_at > filter.until)\n    return false;\n  return true;\n}\nfunction matchFilters(filters, event) {\n  for (let i2 = 0; i2 < filters.length; i2++) {\n    if (matchFilter(filters[i2], event))\n      return true;\n  }\n  return false;\n}\nfunction mergeFilters(...filters) {\n  let result = {};\n  for (let i2 = 0; i2 < filters.length; i2++) {\n    let filter = filters[i2];\n    Object.entries(filter).forEach(([property, values]) => {\n      if (property === \"kinds\" || property === \"ids\" || property === \"authors\" || property[0] === \"#\") {\n        result[property] = result[property] || [];\n        for (let v = 0; v < values.length; v++) {\n          let value = values[v];\n          if (!result[property].includes(value))\n            result[property].push(value);\n        }\n      }\n    });\n    if (filter.limit && (!result.limit || filter.limit > result.limit))\n      result.limit = filter.limit;\n    if (filter.until && (!result.until || filter.until > result.until))\n      result.until = filter.until;\n    if (filter.since && (!result.since || filter.since < result.since))\n      result.since = filter.since;\n  }\n  return result;\n}\nfunction getFilterLimit(filter) {\n  if (filter.ids && !filter.ids.length)\n    return 0;\n  if (filter.kinds && !filter.kinds.length)\n    return 0;\n  if (filter.authors && !filter.authors.length)\n    return 0;\n  return Math.min(\n    Math.max(0, filter.limit ?? Infinity),\n    filter.ids?.length ?? Infinity,\n    filter.authors?.length && filter.kinds?.every((kind) => isReplaceableKind(kind)) ? filter.authors.length * filter.kinds.length : Infinity\n  );\n}\n\n// fakejson.ts\nvar fakejson_exports = {};\n__export(fakejson_exports, {\n  getHex64: () => getHex64,\n  getInt: () => getInt,\n  getSubscriptionId: () => getSubscriptionId,\n  matchEventId: () => matchEventId,\n  matchEventKind: () => matchEventKind,\n  matchEventPubkey: () => matchEventPubkey\n});\nfunction getHex64(json, field) {\n  let len = field.length + 3;\n  let idx = json.indexOf(`\"${field}\":`) + len;\n  let s = json.slice(idx).indexOf(`\"`) + idx + 1;\n  return json.slice(s, s + 64);\n}\nfunction getInt(json, field) {\n  let len = field.length;\n  let idx = json.indexOf(`\"${field}\":`) + len + 3;\n  let sliced = json.slice(idx);\n  let end = Math.min(sliced.indexOf(\",\"), sliced.indexOf(\"}\"));\n  return parseInt(sliced.slice(0, end), 10);\n}\nfunction getSubscriptionId(json) {\n  let idx = json.slice(0, 22).indexOf(`\"EVENT\"`);\n  if (idx === -1)\n    return null;\n  let pstart = json.slice(idx + 7 + 1).indexOf(`\"`);\n  if (pstart === -1)\n    return null;\n  let start = idx + 7 + 1 + pstart;\n  let pend = json.slice(start + 1, 80).indexOf(`\"`);\n  if (pend === -1)\n    return null;\n  let end = start + 1 + pend;\n  return json.slice(start + 1, end);\n}\nfunction matchEventId(json, id) {\n  return id === getHex64(json, \"id\");\n}\nfunction matchEventPubkey(json, pubkey) {\n  return pubkey === getHex64(json, \"pubkey\");\n}\nfunction matchEventKind(json, kind) {\n  return kind === getInt(json, \"kind\");\n}\n\n// nip42.ts\nvar nip42_exports = {};\n__export(nip42_exports, {\n  makeAuthEvent: () => makeAuthEvent\n});\nfunction makeAuthEvent(relayURL, challenge) {\n  return {\n    kind: ClientAuth,\n    created_at: Math.floor(Date.now() / 1e3),\n    tags: [\n      [\"relay\", relayURL],\n      [\"challenge\", challenge]\n    ],\n    content: \"\"\n  };\n}\n\n// helpers.ts\nasync function yieldThread() {\n  return new Promise((resolve) => {\n    const ch = new MessageChannel();\n    const handler = () => {\n      ch.port1.removeEventListener(\"message\", handler);\n      resolve();\n    };\n    ch.port1.addEventListener(\"message\", handler);\n    ch.port2.postMessage(0);\n    ch.port1.start();\n  });\n}\nvar alwaysTrue = (t) => {\n  t[verifiedSymbol] = true;\n  return true;\n};\n\n// abstract-relay.ts\nvar AbstractRelay = class {\n  url;\n  _connected = false;\n  onclose = null;\n  onnotice = (msg) => console.debug(`NOTICE from ${this.url}: ${msg}`);\n  baseEoseTimeout = 4400;\n  connectionTimeout = 4400;\n  openSubs = /* @__PURE__ */ new Map();\n  connectionTimeoutHandle;\n  connectionPromise;\n  openCountRequests = /* @__PURE__ */ new Map();\n  openEventPublishes = /* @__PURE__ */ new Map();\n  ws;\n  incomingMessageQueue = new Queue();\n  queueRunning = false;\n  challenge;\n  serial = 0;\n  verifyEvent;\n  constructor(url, opts) {\n    this.url = normalizeURL(url);\n    this.verifyEvent = opts.verifyEvent;\n  }\n  static async connect(url, opts) {\n    const relay = new AbstractRelay(url, opts);\n    await relay.connect();\n    return relay;\n  }\n  closeAllSubscriptions(reason) {\n    for (let [_, sub] of this.openSubs) {\n      sub.close(reason);\n    }\n    this.openSubs.clear();\n    for (let [_, ep] of this.openEventPublishes) {\n      ep.reject(new Error(reason));\n    }\n    this.openEventPublishes.clear();\n    for (let [_, cr] of this.openCountRequests) {\n      cr.reject(new Error(reason));\n    }\n    this.openCountRequests.clear();\n  }\n  get connected() {\n    return this._connected;\n  }\n  async connect() {\n    if (this.connectionPromise)\n      return this.connectionPromise;\n    this.challenge = void 0;\n    this.connectionPromise = new Promise((resolve, reject) => {\n      this.connectionTimeoutHandle = setTimeout(() => {\n        reject(\"connection timed out\");\n        this.connectionPromise = void 0;\n        this.onclose?.();\n        this.closeAllSubscriptions(\"relay connection timed out\");\n      }, this.connectionTimeout);\n      try {\n        this.ws = new WebSocket(this.url);\n      } catch (err) {\n        reject(err);\n        return;\n      }\n      this.ws.onopen = () => {\n        clearTimeout(this.connectionTimeoutHandle);\n        this._connected = true;\n        resolve();\n      };\n      this.ws.onerror = (ev) => {\n        reject(ev.message);\n        if (this._connected) {\n          this.onclose?.();\n          this.closeAllSubscriptions(\"relay connection errored\");\n          this._connected = false;\n        }\n      };\n      this.ws.onclose = async () => {\n        this.connectionPromise = void 0;\n        this.onclose?.();\n        this.closeAllSubscriptions(\"relay connection closed\");\n        this._connected = false;\n      };\n      this.ws.onmessage = this._onmessage.bind(this);\n    });\n    return this.connectionPromise;\n  }\n  async runQueue() {\n    this.queueRunning = true;\n    while (true) {\n      if (false === this.handleNext()) {\n        break;\n      }\n      await yieldThread();\n    }\n    this.queueRunning = false;\n  }\n  handleNext() {\n    const json = this.incomingMessageQueue.dequeue();\n    if (!json) {\n      return false;\n    }\n    const subid = getSubscriptionId(json);\n    if (subid) {\n      const so = this.openSubs.get(subid);\n      if (!so) {\n        return;\n      }\n      const id = getHex64(json, \"id\");\n      const alreadyHave = so.alreadyHaveEvent?.(id);\n      so.receivedEvent?.(this, id);\n      if (alreadyHave) {\n        return;\n      }\n    }\n    try {\n      let data = JSON.parse(json);\n      switch (data[0]) {\n        case \"EVENT\": {\n          const so = this.openSubs.get(data[1]);\n          const event = data[2];\n          if (this.verifyEvent(event) && matchFilters(so.filters, event)) {\n            so.onevent(event);\n          }\n          return;\n        }\n        case \"COUNT\": {\n          const id = data[1];\n          const payload = data[2];\n          const cr = this.openCountRequests.get(id);\n          if (cr) {\n            cr.resolve(payload.count);\n            this.openCountRequests.delete(id);\n          }\n          return;\n        }\n        case \"EOSE\": {\n          const so = this.openSubs.get(data[1]);\n          if (!so)\n            return;\n          so.receivedEose();\n          return;\n        }\n        case \"OK\": {\n          const id = data[1];\n          const ok = data[2];\n          const reason = data[3];\n          const ep = this.openEventPublishes.get(id);\n          if (ok)\n            ep.resolve(reason);\n          else\n            ep.reject(new Error(reason));\n          this.openEventPublishes.delete(id);\n          return;\n        }\n        case \"CLOSED\": {\n          const id = data[1];\n          const so = this.openSubs.get(id);\n          if (!so)\n            return;\n          so.closed = true;\n          so.close(data[2]);\n          return;\n        }\n        case \"NOTICE\":\n          this.onnotice(data[1]);\n          return;\n        case \"AUTH\": {\n          this.challenge = data[1];\n          return;\n        }\n      }\n    } catch (err) {\n      return;\n    }\n  }\n  async send(message) {\n    if (!this.connectionPromise)\n      throw new Error(\"sending on closed connection\");\n    this.connectionPromise.then(() => {\n      this.ws?.send(message);\n    });\n  }\n  async auth(signAuthEvent) {\n    if (!this.challenge)\n      throw new Error(\"can't perform auth, no challenge was received\");\n    const evt = await signAuthEvent(makeAuthEvent(this.url, this.challenge));\n    const ret = new Promise((resolve, reject) => {\n      this.openEventPublishes.set(evt.id, { resolve, reject });\n    });\n    this.send('[\"AUTH\",' + JSON.stringify(evt) + \"]\");\n    return ret;\n  }\n  async publish(event) {\n    const ret = new Promise((resolve, reject) => {\n      this.openEventPublishes.set(event.id, { resolve, reject });\n    });\n    this.send('[\"EVENT\",' + JSON.stringify(event) + \"]\");\n    return ret;\n  }\n  async count(filters, params) {\n    this.serial++;\n    const id = params?.id || \"count:\" + this.serial;\n    const ret = new Promise((resolve, reject) => {\n      this.openCountRequests.set(id, { resolve, reject });\n    });\n    this.send('[\"COUNT\",\"' + id + '\",' + JSON.stringify(filters) + \"]\");\n    return ret;\n  }\n  subscribe(filters, params) {\n    const subscription = this.prepareSubscription(filters, params);\n    subscription.fire();\n    return subscription;\n  }\n  prepareSubscription(filters, params) {\n    this.serial++;\n    const id = params.id || \"sub:\" + this.serial;\n    const subscription = new Subscription(this, id, filters, params);\n    this.openSubs.set(id, subscription);\n    return subscription;\n  }\n  close() {\n    this.closeAllSubscriptions(\"relay connection closed by us\");\n    this._connected = false;\n    this.ws?.close();\n  }\n  _onmessage(ev) {\n    this.incomingMessageQueue.enqueue(ev.data);\n    if (!this.queueRunning) {\n      this.runQueue();\n    }\n  }\n};\nvar Subscription = class {\n  relay;\n  id;\n  closed = false;\n  eosed = false;\n  filters;\n  alreadyHaveEvent;\n  receivedEvent;\n  onevent;\n  oneose;\n  onclose;\n  eoseTimeout;\n  eoseTimeoutHandle;\n  constructor(relay, id, filters, params) {\n    this.relay = relay;\n    this.filters = filters;\n    this.id = id;\n    this.alreadyHaveEvent = params.alreadyHaveEvent;\n    this.receivedEvent = params.receivedEvent;\n    this.eoseTimeout = params.eoseTimeout || relay.baseEoseTimeout;\n    this.oneose = params.oneose;\n    this.onclose = params.onclose;\n    this.onevent = params.onevent || ((event) => {\n      console.warn(\n        `onevent() callback not defined for subscription '${this.id}' in relay ${this.relay.url}. event received:`,\n        event\n      );\n    });\n  }\n  fire() {\n    this.relay.send('[\"REQ\",\"' + this.id + '\",' + JSON.stringify(this.filters).substring(1));\n    this.eoseTimeoutHandle = setTimeout(this.receivedEose.bind(this), this.eoseTimeout);\n  }\n  receivedEose() {\n    if (this.eosed)\n      return;\n    clearTimeout(this.eoseTimeoutHandle);\n    this.eosed = true;\n    this.oneose?.();\n  }\n  close(reason = \"closed by caller\") {\n    if (!this.closed) {\n      this.relay.send('[\"CLOSE\",' + JSON.stringify(this.id) + \"]\");\n      this.closed = true;\n    }\n    this.relay.openSubs.delete(this.id);\n    this.onclose?.(reason);\n  }\n};\n\n// relay.ts\nfunction relayConnect(url) {\n  return Relay.connect(url);\n}\nvar Relay = class extends AbstractRelay {\n  constructor(url) {\n    super(url, { verifyEvent });\n  }\n  static async connect(url) {\n    const relay = new Relay(url);\n    await relay.connect();\n    return relay;\n  }\n};\n\n// abstract-pool.ts\nvar AbstractSimplePool = class {\n  relays = /* @__PURE__ */ new Map();\n  seenOn = /* @__PURE__ */ new Map();\n  trackRelays = false;\n  verifyEvent;\n  trustedRelayURLs = /* @__PURE__ */ new Set();\n  constructor(opts) {\n    this.verifyEvent = opts.verifyEvent;\n  }\n  async ensureRelay(url, params) {\n    url = normalizeURL(url);\n    let relay = this.relays.get(url);\n    if (!relay) {\n      relay = new AbstractRelay(url, {\n        verifyEvent: this.trustedRelayURLs.has(url) ? alwaysTrue : this.verifyEvent\n      });\n      if (params?.connectionTimeout)\n        relay.connectionTimeout = params.connectionTimeout;\n      this.relays.set(url, relay);\n    }\n    await relay.connect();\n    return relay;\n  }\n  close(relays) {\n    relays.map(normalizeURL).forEach((url) => {\n      this.relays.get(url)?.close();\n    });\n  }\n  subscribeMany(relays, filters, params) {\n    if (this.trackRelays) {\n      params.receivedEvent = (relay, id) => {\n        let set = this.seenOn.get(id);\n        if (!set) {\n          set = /* @__PURE__ */ new Set();\n          this.seenOn.set(id, set);\n        }\n        set.add(relay);\n      };\n    }\n    const _knownIds = /* @__PURE__ */ new Set();\n    const subs = [];\n    const eosesReceived = [];\n    let handleEose = (i2) => {\n      eosesReceived[i2] = true;\n      if (eosesReceived.filter((a) => a).length === relays.length) {\n        params.oneose?.();\n        handleEose = () => {\n        };\n      }\n    };\n    const closesReceived = [];\n    let handleClose = (i2, reason) => {\n      handleEose(i2);\n      closesReceived[i2] = reason;\n      if (closesReceived.filter((a) => a).length === relays.length) {\n        params.onclose?.(closesReceived);\n        handleClose = () => {\n        };\n      }\n    };\n    const localAlreadyHaveEventHandler = (id) => {\n      if (params.alreadyHaveEvent?.(id)) {\n        return true;\n      }\n      const have = _knownIds.has(id);\n      _knownIds.add(id);\n      return have;\n    };\n    const allOpened = Promise.all(\n      relays.map(normalizeURL).map(async (url, i2, arr) => {\n        if (arr.indexOf(url) !== i2) {\n          handleClose(i2, \"duplicate url\");\n          return;\n        }\n        let relay;\n        try {\n          relay = await this.ensureRelay(url, {\n            connectionTimeout: params.maxWait ? Math.max(params.maxWait * 0.8, params.maxWait - 1e3) : void 0\n          });\n        } catch (err) {\n          handleClose(i2, err?.message || String(err));\n          return;\n        }\n        let subscription = relay.subscribe(filters, {\n          ...params,\n          oneose: () => handleEose(i2),\n          onclose: (reason) => handleClose(i2, reason),\n          alreadyHaveEvent: localAlreadyHaveEventHandler,\n          eoseTimeout: params.maxWait\n        });\n        subs.push(subscription);\n      })\n    );\n    return {\n      async close() {\n        await allOpened;\n        subs.forEach((sub) => {\n          sub.close();\n        });\n      }\n    };\n  }\n  subscribeManyEose(relays, filters, params) {\n    const subcloser = this.subscribeMany(relays, filters, {\n      ...params,\n      oneose() {\n        subcloser.close();\n      }\n    });\n    return subcloser;\n  }\n  async querySync(relays, filter, params) {\n    return new Promise(async (resolve) => {\n      const events = [];\n      this.subscribeManyEose(relays, [filter], {\n        ...params,\n        onevent(event) {\n          events.push(event);\n        },\n        onclose(_) {\n          resolve(events);\n        }\n      });\n    });\n  }\n  async get(relays, filter, params) {\n    filter.limit = 1;\n    const events = await this.querySync(relays, filter, params);\n    events.sort((a, b) => b.created_at - a.created_at);\n    return events[0] || null;\n  }\n  publish(relays, event) {\n    return relays.map(normalizeURL).map(async (url, i2, arr) => {\n      if (arr.indexOf(url) !== i2) {\n        return Promise.reject(\"duplicate url\");\n      }\n      let r = await this.ensureRelay(url);\n      return r.publish(event);\n    });\n  }\n};\n\n// pool.ts\nvar SimplePool = class extends AbstractSimplePool {\n  constructor() {\n    super({ verifyEvent });\n  }\n};\n\n// nip19.ts\nvar nip19_exports = {};\n__export(nip19_exports, {\n  BECH32_REGEX: () => BECH32_REGEX,\n  decode: () => decode,\n  naddrEncode: () => naddrEncode,\n  neventEncode: () => neventEncode,\n  noteEncode: () => noteEncode,\n  nprofileEncode: () => nprofileEncode,\n  npubEncode: () => npubEncode,\n  nrelayEncode: () => nrelayEncode,\n  nsecEncode: () => nsecEncode\n});\nimport { bytesToHex as bytesToHex2, concatBytes, hexToBytes } from \"@noble/hashes/utils\";\nimport { bech32 } from \"@scure/base\";\nvar Bech32MaxSize = 5e3;\nvar BECH32_REGEX = /[\\x21-\\x7E]{1,83}1[023456789acdefghjklmnpqrstuvwxyz]{6,}/;\nfunction integerToUint8Array(number) {\n  const uint8Array = new Uint8Array(4);\n  uint8Array[0] = number >> 24 & 255;\n  uint8Array[1] = number >> 16 & 255;\n  uint8Array[2] = number >> 8 & 255;\n  uint8Array[3] = number & 255;\n  return uint8Array;\n}\nfunction decode(nip19) {\n  let { prefix, words } = bech32.decode(nip19, Bech32MaxSize);\n  let data = new Uint8Array(bech32.fromWords(words));\n  switch (prefix) {\n    case \"nprofile\": {\n      let tlv = parseTLV(data);\n      if (!tlv[0]?.[0])\n        throw new Error(\"missing TLV 0 for nprofile\");\n      if (tlv[0][0].length !== 32)\n        throw new Error(\"TLV 0 should be 32 bytes\");\n      return {\n        type: \"nprofile\",\n        data: {\n          pubkey: bytesToHex2(tlv[0][0]),\n          relays: tlv[1] ? tlv[1].map((d) => utf8Decoder.decode(d)) : []\n        }\n      };\n    }\n    case \"nevent\": {\n      let tlv = parseTLV(data);\n      if (!tlv[0]?.[0])\n        throw new Error(\"missing TLV 0 for nevent\");\n      if (tlv[0][0].length !== 32)\n        throw new Error(\"TLV 0 should be 32 bytes\");\n      if (tlv[2] && tlv[2][0].length !== 32)\n        throw new Error(\"TLV 2 should be 32 bytes\");\n      if (tlv[3] && tlv[3][0].length !== 4)\n        throw new Error(\"TLV 3 should be 4 bytes\");\n      return {\n        type: \"nevent\",\n        data: {\n          id: bytesToHex2(tlv[0][0]),\n          relays: tlv[1] ? tlv[1].map((d) => utf8Decoder.decode(d)) : [],\n          author: tlv[2]?.[0] ? bytesToHex2(tlv[2][0]) : void 0,\n          kind: tlv[3]?.[0] ? parseInt(bytesToHex2(tlv[3][0]), 16) : void 0\n        }\n      };\n    }\n    case \"naddr\": {\n      let tlv = parseTLV(data);\n      if (!tlv[0]?.[0])\n        throw new Error(\"missing TLV 0 for naddr\");\n      if (!tlv[2]?.[0])\n        throw new Error(\"missing TLV 2 for naddr\");\n      if (tlv[2][0].length !== 32)\n        throw new Error(\"TLV 2 should be 32 bytes\");\n      if (!tlv[3]?.[0])\n        throw new Error(\"missing TLV 3 for naddr\");\n      if (tlv[3][0].length !== 4)\n        throw new Error(\"TLV 3 should be 4 bytes\");\n      return {\n        type: \"naddr\",\n        data: {\n          identifier: utf8Decoder.decode(tlv[0][0]),\n          pubkey: bytesToHex2(tlv[2][0]),\n          kind: parseInt(bytesToHex2(tlv[3][0]), 16),\n          relays: tlv[1] ? tlv[1].map((d) => utf8Decoder.decode(d)) : []\n        }\n      };\n    }\n    case \"nrelay\": {\n      let tlv = parseTLV(data);\n      if (!tlv[0]?.[0])\n        throw new Error(\"missing TLV 0 for nrelay\");\n      return {\n        type: \"nrelay\",\n        data: utf8Decoder.decode(tlv[0][0])\n      };\n    }\n    case \"nsec\":\n      return { type: prefix, data };\n    case \"npub\":\n    case \"note\":\n      return { type: prefix, data: bytesToHex2(data) };\n    default:\n      throw new Error(`unknown prefix ${prefix}`);\n  }\n}\nfunction parseTLV(data) {\n  let result = {};\n  let rest = data;\n  while (rest.length > 0) {\n    let t = rest[0];\n    let l = rest[1];\n    let v = rest.slice(2, 2 + l);\n    rest = rest.slice(2 + l);\n    if (v.length < l)\n      throw new Error(`not enough data to read on TLV ${t}`);\n    result[t] = result[t] || [];\n    result[t].push(v);\n  }\n  return result;\n}\nfunction nsecEncode(key) {\n  return encodeBytes(\"nsec\", key);\n}\nfunction npubEncode(hex) {\n  return encodeBytes(\"npub\", hexToBytes(hex));\n}\nfunction noteEncode(hex) {\n  return encodeBytes(\"note\", hexToBytes(hex));\n}\nfunction encodeBech32(prefix, data) {\n  let words = bech32.toWords(data);\n  return bech32.encode(prefix, words, Bech32MaxSize);\n}\nfunction encodeBytes(prefix, bytes) {\n  return encodeBech32(prefix, bytes);\n}\nfunction nprofileEncode(profile) {\n  let data = encodeTLV({\n    0: [hexToBytes(profile.pubkey)],\n    1: (profile.relays || []).map((url) => utf8Encoder.encode(url))\n  });\n  return encodeBech32(\"nprofile\", data);\n}\nfunction neventEncode(event) {\n  let kindArray;\n  if (event.kind !== void 0) {\n    kindArray = integerToUint8Array(event.kind);\n  }\n  let data = encodeTLV({\n    0: [hexToBytes(event.id)],\n    1: (event.relays || []).map((url) => utf8Encoder.encode(url)),\n    2: event.author ? [hexToBytes(event.author)] : [],\n    3: kindArray ? [new Uint8Array(kindArray)] : []\n  });\n  return encodeBech32(\"nevent\", data);\n}\nfunction naddrEncode(addr) {\n  let kind = new ArrayBuffer(4);\n  new DataView(kind).setUint32(0, addr.kind, false);\n  let data = encodeTLV({\n    0: [utf8Encoder.encode(addr.identifier)],\n    1: (addr.relays || []).map((url) => utf8Encoder.encode(url)),\n    2: [hexToBytes(addr.pubkey)],\n    3: [new Uint8Array(kind)]\n  });\n  return encodeBech32(\"naddr\", data);\n}\nfunction nrelayEncode(url) {\n  let data = encodeTLV({\n    0: [utf8Encoder.encode(url)]\n  });\n  return encodeBech32(\"nrelay\", data);\n}\nfunction encodeTLV(tlv) {\n  let entries = [];\n  Object.entries(tlv).reverse().forEach(([t, vs]) => {\n    vs.forEach((v) => {\n      let entry = new Uint8Array(v.length + 2);\n      entry.set([parseInt(t)], 0);\n      entry.set([v.length], 1);\n      entry.set(v, 2);\n      entries.push(entry);\n    });\n  });\n  return concatBytes(...entries);\n}\n\n// references.ts\nvar mentionRegex = /\\bnostr:((note|npub|naddr|nevent|nprofile)1\\w+)\\b|#\\[(\\d+)\\]/g;\nfunction parseReferences(evt) {\n  let references = [];\n  for (let ref of evt.content.matchAll(mentionRegex)) {\n    if (ref[2]) {\n      try {\n        let { type, data } = decode(ref[1]);\n        switch (type) {\n          case \"npub\": {\n            references.push({\n              text: ref[0],\n              profile: { pubkey: data, relays: [] }\n            });\n            break;\n          }\n          case \"nprofile\": {\n            references.push({\n              text: ref[0],\n              profile: data\n            });\n            break;\n          }\n          case \"note\": {\n            references.push({\n              text: ref[0],\n              event: { id: data, relays: [] }\n            });\n            break;\n          }\n          case \"nevent\": {\n            references.push({\n              text: ref[0],\n              event: data\n            });\n            break;\n          }\n          case \"naddr\": {\n            references.push({\n              text: ref[0],\n              address: data\n            });\n            break;\n          }\n        }\n      } catch (err) {\n      }\n    } else if (ref[3]) {\n      let idx = parseInt(ref[3], 10);\n      let tag = evt.tags[idx];\n      if (!tag)\n        continue;\n      switch (tag[0]) {\n        case \"p\": {\n          references.push({\n            text: ref[0],\n            profile: { pubkey: tag[1], relays: tag[2] ? [tag[2]] : [] }\n          });\n          break;\n        }\n        case \"e\": {\n          references.push({\n            text: ref[0],\n            event: { id: tag[1], relays: tag[2] ? [tag[2]] : [] }\n          });\n          break;\n        }\n        case \"a\": {\n          try {\n            let [kind, pubkey, identifier] = tag[1].split(\":\");\n            references.push({\n              text: ref[0],\n              address: {\n                identifier,\n                pubkey,\n                kind: parseInt(kind, 10),\n                relays: tag[2] ? [tag[2]] : []\n              }\n            });\n          } catch (err) {\n          }\n          break;\n        }\n      }\n    }\n  }\n  return references;\n}\n\n// nip04.ts\nvar nip04_exports = {};\n__export(nip04_exports, {\n  decrypt: () => decrypt,\n  encrypt: () => encrypt\n});\nimport { bytesToHex as bytesToHex3, randomBytes } from \"@noble/hashes/utils\";\nimport { secp256k1 } from \"@noble/curves/secp256k1\";\nimport { base64 } from \"@scure/base\";\nif (typeof crypto !== \"undefined\" && !crypto.subtle && crypto.webcrypto) {\n  crypto.subtle = crypto.webcrypto.subtle;\n}\nasync function encrypt(secretKey, pubkey, text) {\n  const privkey = secretKey instanceof Uint8Array ? bytesToHex3(secretKey) : secretKey;\n  const key = secp256k1.getSharedSecret(privkey, \"02\" + pubkey);\n  const normalizedKey = getNormalizedX(key);\n  let iv = Uint8Array.from(randomBytes(16));\n  let plaintext = utf8Encoder.encode(text);\n  let cryptoKey = await crypto.subtle.importKey(\"raw\", normalizedKey, { name: \"AES-CBC\" }, false, [\"encrypt\"]);\n  let ciphertext = await crypto.subtle.encrypt({ name: \"AES-CBC\", iv }, cryptoKey, plaintext);\n  let ctb64 = base64.encode(new Uint8Array(ciphertext));\n  let ivb64 = base64.encode(new Uint8Array(iv.buffer));\n  return `${ctb64}?iv=${ivb64}`;\n}\nasync function decrypt(secretKey, pubkey, data) {\n  const privkey = secretKey instanceof Uint8Array ? bytesToHex3(secretKey) : secretKey;\n  let [ctb64, ivb64] = data.split(\"?iv=\");\n  let key = secp256k1.getSharedSecret(privkey, \"02\" + pubkey);\n  let normalizedKey = getNormalizedX(key);\n  let cryptoKey = await crypto.subtle.importKey(\"raw\", normalizedKey, { name: \"AES-CBC\" }, false, [\"decrypt\"]);\n  let ciphertext = base64.decode(ctb64);\n  let iv = base64.decode(ivb64);\n  let plaintext = await crypto.subtle.decrypt({ name: \"AES-CBC\", iv }, cryptoKey, ciphertext);\n  let text = utf8Decoder.decode(plaintext);\n  return text;\n}\nfunction getNormalizedX(key) {\n  return key.slice(1, 33);\n}\n\n// nip05.ts\nvar nip05_exports = {};\n__export(nip05_exports, {\n  NIP05_REGEX: () => NIP05_REGEX,\n  queryProfile: () => queryProfile,\n  searchDomain: () => searchDomain,\n  useFetchImplementation: () => useFetchImplementation\n});\nvar NIP05_REGEX = /^(?:([\\w.+-]+)@)?([\\w.-]+)$/;\nvar _fetch;\ntry {\n  _fetch = fetch;\n} catch {\n}\nfunction useFetchImplementation(fetchImplementation) {\n  _fetch = fetchImplementation;\n}\nasync function searchDomain(domain, query = \"\") {\n  try {\n    let res = await (await _fetch(`https://${domain}/.well-known/nostr.json?name=${query}`)).json();\n    return res.names;\n  } catch (_) {\n    return {};\n  }\n}\nasync function queryProfile(fullname) {\n  const match = fullname.match(NIP05_REGEX);\n  if (!match)\n    return null;\n  const [_, name = \"_\", domain] = match;\n  try {\n    const res = await _fetch(`https://${domain}/.well-known/nostr.json?name=${name}`);\n    const { names, relays } = parseNIP05Result(await res.json());\n    const pubkey = names[name];\n    return pubkey ? { pubkey, relays: relays?.[pubkey] } : null;\n  } catch (_e) {\n    return null;\n  }\n}\nfunction parseNIP05Result(json) {\n  const result = {\n    names: {}\n  };\n  for (const [name, pubkey] of Object.entries(json.names)) {\n    if (typeof name === \"string\" && typeof pubkey === \"string\") {\n      result.names[name] = pubkey;\n    }\n  }\n  if (json.relays) {\n    result.relays = {};\n    for (const [pubkey, relays] of Object.entries(json.relays)) {\n      if (typeof pubkey === \"string\" && Array.isArray(relays)) {\n        result.relays[pubkey] = relays.filter((relay) => typeof relay === \"string\");\n      }\n    }\n  }\n  return result;\n}\n\n// nip10.ts\nvar nip10_exports = {};\n__export(nip10_exports, {\n  parse: () => parse\n});\nfunction parse(event) {\n  const result = {\n    reply: void 0,\n    root: void 0,\n    mentions: [],\n    profiles: []\n  };\n  const eTags = [];\n  for (const tag of event.tags) {\n    if (tag[0] === \"e\" && tag[1]) {\n      eTags.push(tag);\n    }\n    if (tag[0] === \"p\" && tag[1]) {\n      result.profiles.push({\n        pubkey: tag[1],\n        relays: tag[2] ? [tag[2]] : []\n      });\n    }\n  }\n  for (let eTagIndex = 0; eTagIndex < eTags.length; eTagIndex++) {\n    const eTag = eTags[eTagIndex];\n    const [_, eTagEventId, eTagRelayUrl, eTagMarker] = eTag;\n    const eventPointer = {\n      id: eTagEventId,\n      relays: eTagRelayUrl ? [eTagRelayUrl] : []\n    };\n    const isFirstETag = eTagIndex === 0;\n    const isLastETag = eTagIndex === eTags.length - 1;\n    if (eTagMarker === \"root\") {\n      result.root = eventPointer;\n      continue;\n    }\n    if (eTagMarker === \"reply\") {\n      result.reply = eventPointer;\n      continue;\n    }\n    if (eTagMarker === \"mention\") {\n      result.mentions.push(eventPointer);\n      continue;\n    }\n    if (isFirstETag) {\n      result.root = eventPointer;\n      continue;\n    }\n    if (isLastETag) {\n      result.reply = eventPointer;\n      continue;\n    }\n    result.mentions.push(eventPointer);\n  }\n  return result;\n}\n\n// nip11.ts\nvar nip11_exports = {};\n__export(nip11_exports, {\n  fetchRelayInformation: () => fetchRelayInformation,\n  useFetchImplementation: () => useFetchImplementation2\n});\nvar _fetch2;\ntry {\n  _fetch2 = fetch;\n} catch {\n}\nfunction useFetchImplementation2(fetchImplementation) {\n  _fetch2 = fetchImplementation;\n}\nasync function fetchRelayInformation(url) {\n  return await (await fetch(url.replace(\"ws://\", \"http://\").replace(\"wss://\", \"https://\"), {\n    headers: { Accept: \"application/nostr+json\" }\n  })).json();\n}\n\n// nip13.ts\nvar nip13_exports = {};\n__export(nip13_exports, {\n  getPow: () => getPow,\n  minePow: () => minePow\n});\nfunction getPow(hex) {\n  let count = 0;\n  for (let i2 = 0; i2 < hex.length; i2++) {\n    const nibble = parseInt(hex[i2], 16);\n    if (nibble === 0) {\n      count += 4;\n    } else {\n      count += Math.clz32(nibble) - 28;\n      break;\n    }\n  }\n  return count;\n}\nfunction minePow(unsigned, difficulty) {\n  let count = 0;\n  const event = unsigned;\n  const tag = [\"nonce\", count.toString(), difficulty.toString()];\n  event.tags.push(tag);\n  while (true) {\n    const now = Math.floor(new Date().getTime() / 1e3);\n    if (now !== event.created_at) {\n      count = 0;\n      event.created_at = now;\n    }\n    tag[1] = (++count).toString();\n    event.id = getEventHash(event);\n    if (getPow(event.id) >= difficulty) {\n      break;\n    }\n  }\n  return event;\n}\n\n// nip18.ts\nvar nip18_exports = {};\n__export(nip18_exports, {\n  finishRepostEvent: () => finishRepostEvent,\n  getRepostedEvent: () => getRepostedEvent,\n  getRepostedEventPointer: () => getRepostedEventPointer\n});\nfunction finishRepostEvent(t, reposted, relayUrl, privateKey) {\n  return finalizeEvent(\n    {\n      kind: Repost,\n      tags: [...t.tags ?? [], [\"e\", reposted.id, relayUrl], [\"p\", reposted.pubkey]],\n      content: t.content === \"\" ? \"\" : JSON.stringify(reposted),\n      created_at: t.created_at\n    },\n    privateKey\n  );\n}\nfunction getRepostedEventPointer(event) {\n  if (event.kind !== Repost) {\n    return void 0;\n  }\n  let lastETag;\n  let lastPTag;\n  for (let i2 = event.tags.length - 1; i2 >= 0 && (lastETag === void 0 || lastPTag === void 0); i2--) {\n    const tag = event.tags[i2];\n    if (tag.length >= 2) {\n      if (tag[0] === \"e\" && lastETag === void 0) {\n        lastETag = tag;\n      } else if (tag[0] === \"p\" && lastPTag === void 0) {\n        lastPTag = tag;\n      }\n    }\n  }\n  if (lastETag === void 0) {\n    return void 0;\n  }\n  return {\n    id: lastETag[1],\n    relays: [lastETag[2], lastPTag?.[2]].filter((x) => typeof x === \"string\"),\n    author: lastPTag?.[1]\n  };\n}\nfunction getRepostedEvent(event, { skipVerification } = {}) {\n  const pointer = getRepostedEventPointer(event);\n  if (pointer === void 0 || event.content === \"\") {\n    return void 0;\n  }\n  let repostedEvent;\n  try {\n    repostedEvent = JSON.parse(event.content);\n  } catch (error) {\n    return void 0;\n  }\n  if (repostedEvent.id !== pointer.id) {\n    return void 0;\n  }\n  if (!skipVerification && !verifyEvent(repostedEvent)) {\n    return void 0;\n  }\n  return repostedEvent;\n}\n\n// nip21.ts\nvar nip21_exports = {};\n__export(nip21_exports, {\n  NOSTR_URI_REGEX: () => NOSTR_URI_REGEX,\n  parse: () => parse2,\n  test: () => test\n});\nvar NOSTR_URI_REGEX = new RegExp(`nostr:(${BECH32_REGEX.source})`);\nfunction test(value) {\n  return typeof value === \"string\" && new RegExp(`^${NOSTR_URI_REGEX.source}$`).test(value);\n}\nfunction parse2(uri) {\n  const match = uri.match(new RegExp(`^${NOSTR_URI_REGEX.source}$`));\n  if (!match)\n    throw new Error(`Invalid Nostr URI: ${uri}`);\n  return {\n    uri: match[0],\n    value: match[1],\n    decoded: decode(match[1])\n  };\n}\n\n// nip25.ts\nvar nip25_exports = {};\n__export(nip25_exports, {\n  finishReactionEvent: () => finishReactionEvent,\n  getReactedEventPointer: () => getReactedEventPointer\n});\nfunction finishReactionEvent(t, reacted, privateKey) {\n  const inheritedTags = reacted.tags.filter((tag) => tag.length >= 2 && (tag[0] === \"e\" || tag[0] === \"p\"));\n  return finalizeEvent(\n    {\n      ...t,\n      kind: Reaction,\n      tags: [...t.tags ?? [], ...inheritedTags, [\"e\", reacted.id], [\"p\", reacted.pubkey]],\n      content: t.content ?? \"+\"\n    },\n    privateKey\n  );\n}\nfunction getReactedEventPointer(event) {\n  if (event.kind !== Reaction) {\n    return void 0;\n  }\n  let lastETag;\n  let lastPTag;\n  for (let i2 = event.tags.length - 1; i2 >= 0 && (lastETag === void 0 || lastPTag === void 0); i2--) {\n    const tag = event.tags[i2];\n    if (tag.length >= 2) {\n      if (tag[0] === \"e\" && lastETag === void 0) {\n        lastETag = tag;\n      } else if (tag[0] === \"p\" && lastPTag === void 0) {\n        lastPTag = tag;\n      }\n    }\n  }\n  if (lastETag === void 0 || lastPTag === void 0) {\n    return void 0;\n  }\n  return {\n    id: lastETag[1],\n    relays: [lastETag[2], lastPTag[2]].filter((x) => x !== void 0),\n    author: lastPTag[1]\n  };\n}\n\n// nip27.ts\nvar nip27_exports = {};\n__export(nip27_exports, {\n  matchAll: () => matchAll,\n  regex: () => regex,\n  replaceAll: () => replaceAll\n});\nvar regex = () => new RegExp(`\\\\b${NOSTR_URI_REGEX.source}\\\\b`, \"g\");\nfunction* matchAll(content) {\n  const matches = content.matchAll(regex());\n  for (const match of matches) {\n    try {\n      const [uri, value] = match;\n      yield {\n        uri,\n        value,\n        decoded: decode(value),\n        start: match.index,\n        end: match.index + uri.length\n      };\n    } catch (_e) {\n    }\n  }\n}\nfunction replaceAll(content, replacer) {\n  return content.replaceAll(regex(), (uri, value) => {\n    return replacer({\n      uri,\n      value,\n      decoded: decode(value)\n    });\n  });\n}\n\n// nip28.ts\nvar nip28_exports = {};\n__export(nip28_exports, {\n  channelCreateEvent: () => channelCreateEvent,\n  channelHideMessageEvent: () => channelHideMessageEvent,\n  channelMessageEvent: () => channelMessageEvent,\n  channelMetadataEvent: () => channelMetadataEvent,\n  channelMuteUserEvent: () => channelMuteUserEvent\n});\nvar channelCreateEvent = (t, privateKey) => {\n  let content;\n  if (typeof t.content === \"object\") {\n    content = JSON.stringify(t.content);\n  } else if (typeof t.content === \"string\") {\n    content = t.content;\n  } else {\n    return void 0;\n  }\n  return finalizeEvent(\n    {\n      kind: ChannelCreation,\n      tags: [...t.tags ?? []],\n      content,\n      created_at: t.created_at\n    },\n    privateKey\n  );\n};\nvar channelMetadataEvent = (t, privateKey) => {\n  let content;\n  if (typeof t.content === \"object\") {\n    content = JSON.stringify(t.content);\n  } else if (typeof t.content === \"string\") {\n    content = t.content;\n  } else {\n    return void 0;\n  }\n  return finalizeEvent(\n    {\n      kind: ChannelMetadata,\n      tags: [[\"e\", t.channel_create_event_id], ...t.tags ?? []],\n      content,\n      created_at: t.created_at\n    },\n    privateKey\n  );\n};\nvar channelMessageEvent = (t, privateKey) => {\n  const tags = [[\"e\", t.channel_create_event_id, t.relay_url, \"root\"]];\n  if (t.reply_to_channel_message_event_id) {\n    tags.push([\"e\", t.reply_to_channel_message_event_id, t.relay_url, \"reply\"]);\n  }\n  return finalizeEvent(\n    {\n      kind: ChannelMessage,\n      tags: [...tags, ...t.tags ?? []],\n      content: t.content,\n      created_at: t.created_at\n    },\n    privateKey\n  );\n};\nvar channelHideMessageEvent = (t, privateKey) => {\n  let content;\n  if (typeof t.content === \"object\") {\n    content = JSON.stringify(t.content);\n  } else if (typeof t.content === \"string\") {\n    content = t.content;\n  } else {\n    return void 0;\n  }\n  return finalizeEvent(\n    {\n      kind: ChannelHideMessage,\n      tags: [[\"e\", t.channel_message_event_id], ...t.tags ?? []],\n      content,\n      created_at: t.created_at\n    },\n    privateKey\n  );\n};\nvar channelMuteUserEvent = (t, privateKey) => {\n  let content;\n  if (typeof t.content === \"object\") {\n    content = JSON.stringify(t.content);\n  } else if (typeof t.content === \"string\") {\n    content = t.content;\n  } else {\n    return void 0;\n  }\n  return finalizeEvent(\n    {\n      kind: ChannelMuteUser,\n      tags: [[\"p\", t.pubkey_to_mute], ...t.tags ?? []],\n      content,\n      created_at: t.created_at\n    },\n    privateKey\n  );\n};\n\n// nip30.ts\nvar nip30_exports = {};\n__export(nip30_exports, {\n  EMOJI_SHORTCODE_REGEX: () => EMOJI_SHORTCODE_REGEX,\n  matchAll: () => matchAll2,\n  regex: () => regex2,\n  replaceAll: () => replaceAll2\n});\nvar EMOJI_SHORTCODE_REGEX = /:(\\w+):/;\nvar regex2 = () => new RegExp(`\\\\B${EMOJI_SHORTCODE_REGEX.source}\\\\B`, \"g\");\nfunction* matchAll2(content) {\n  const matches = content.matchAll(regex2());\n  for (const match of matches) {\n    try {\n      const [shortcode, name] = match;\n      yield {\n        shortcode,\n        name,\n        start: match.index,\n        end: match.index + shortcode.length\n      };\n    } catch (_e) {\n    }\n  }\n}\nfunction replaceAll2(content, replacer) {\n  return content.replaceAll(regex2(), (shortcode, name) => {\n    return replacer({\n      shortcode,\n      name\n    });\n  });\n}\n\n// nip39.ts\nvar nip39_exports = {};\n__export(nip39_exports, {\n  useFetchImplementation: () => useFetchImplementation3,\n  validateGithub: () => validateGithub\n});\nvar _fetch3;\ntry {\n  _fetch3 = fetch;\n} catch {\n}\nfunction useFetchImplementation3(fetchImplementation) {\n  _fetch3 = fetchImplementation;\n}\nasync function validateGithub(pubkey, username, proof) {\n  try {\n    let res = await (await _fetch3(`https://gist.github.com/${username}/${proof}/raw`)).text();\n    return res === `Verifying that I control the following Nostr public key: ${pubkey}`;\n  } catch (_) {\n    return false;\n  }\n}\n\n// nip44.ts\nvar nip44_exports = {};\n__export(nip44_exports, {\n  default: () => nip44_default,\n  v2: () => v2\n});\nimport { chacha20 } from \"@noble/ciphers/chacha\";\nimport { ensureBytes, equalBytes } from \"@noble/ciphers/utils\";\nimport { secp256k1 as secp256k12 } from \"@noble/curves/secp256k1\";\nimport { extract as hkdf_extract, expand as hkdf_expand } from \"@noble/hashes/hkdf\";\nimport { hmac } from \"@noble/hashes/hmac\";\nimport { sha256 as sha2562 } from \"@noble/hashes/sha256\";\nimport { concatBytes as concatBytes2, randomBytes as randomBytes2, utf8ToBytes } from \"@noble/hashes/utils\";\nimport { base64 as base642 } from \"@scure/base\";\nvar decoder = new TextDecoder();\nvar u = {\n  minPlaintextSize: 1,\n  maxPlaintextSize: 65535,\n  utf8Encode: utf8ToBytes,\n  utf8Decode(bytes) {\n    return decoder.decode(bytes);\n  },\n  getConversationKey(privkeyA, pubkeyB) {\n    const sharedX = secp256k12.getSharedSecret(privkeyA, \"02\" + pubkeyB).subarray(1, 33);\n    return hkdf_extract(sha2562, sharedX, \"nip44-v2\");\n  },\n  getMessageKeys(conversationKey, nonce) {\n    ensureBytes(conversationKey, 32);\n    ensureBytes(nonce, 32);\n    const keys = hkdf_expand(sha2562, conversationKey, nonce, 76);\n    return {\n      chacha_key: keys.subarray(0, 32),\n      chacha_nonce: keys.subarray(32, 44),\n      hmac_key: keys.subarray(44, 76)\n    };\n  },\n  calcPaddedLen(len) {\n    if (!Number.isSafeInteger(len) || len < 1)\n      throw new Error(\"expected positive integer\");\n    if (len <= 32)\n      return 32;\n    const nextPower = 1 << Math.floor(Math.log2(len - 1)) + 1;\n    const chunk = nextPower <= 256 ? 32 : nextPower / 8;\n    return chunk * (Math.floor((len - 1) / chunk) + 1);\n  },\n  writeU16BE(num) {\n    if (!Number.isSafeInteger(num) || num < u.minPlaintextSize || num > u.maxPlaintextSize)\n      throw new Error(\"invalid plaintext size: must be between 1 and 65535 bytes\");\n    const arr = new Uint8Array(2);\n    new DataView(arr.buffer).setUint16(0, num, false);\n    return arr;\n  },\n  pad(plaintext) {\n    const unpadded = u.utf8Encode(plaintext);\n    const unpaddedLen = unpadded.length;\n    const prefix = u.writeU16BE(unpaddedLen);\n    const suffix = new Uint8Array(u.calcPaddedLen(unpaddedLen) - unpaddedLen);\n    return concatBytes2(prefix, unpadded, suffix);\n  },\n  unpad(padded) {\n    const unpaddedLen = new DataView(padded.buffer).getUint16(0);\n    const unpadded = padded.subarray(2, 2 + unpaddedLen);\n    if (unpaddedLen < u.minPlaintextSize || unpaddedLen > u.maxPlaintextSize || unpadded.length !== unpaddedLen || padded.length !== 2 + u.calcPaddedLen(unpaddedLen))\n      throw new Error(\"invalid padding\");\n    return u.utf8Decode(unpadded);\n  },\n  hmacAad(key, message, aad) {\n    if (aad.length !== 32)\n      throw new Error(\"AAD associated data must be 32 bytes\");\n    const combined = concatBytes2(aad, message);\n    return hmac(sha2562, key, combined);\n  },\n  decodePayload(payload) {\n    if (typeof payload !== \"string\")\n      throw new Error(\"payload must be a valid string\");\n    const plen = payload.length;\n    if (plen < 132 || plen > 87472)\n      throw new Error(\"invalid payload length: \" + plen);\n    if (payload[0] === \"#\")\n      throw new Error(\"unknown encryption version\");\n    let data;\n    try {\n      data = base642.decode(payload);\n    } catch (error) {\n      throw new Error(\"invalid base64: \" + error.message);\n    }\n    const dlen = data.length;\n    if (dlen < 99 || dlen > 65603)\n      throw new Error(\"invalid data length: \" + dlen);\n    const vers = data[0];\n    if (vers !== 2)\n      throw new Error(\"unknown encryption version \" + vers);\n    return {\n      nonce: data.subarray(1, 33),\n      ciphertext: data.subarray(33, -32),\n      mac: data.subarray(-32)\n    };\n  }\n};\nfunction encrypt2(plaintext, conversationKey, nonce = randomBytes2(32)) {\n  const { chacha_key, chacha_nonce, hmac_key } = u.getMessageKeys(conversationKey, nonce);\n  const padded = u.pad(plaintext);\n  const ciphertext = chacha20(chacha_key, chacha_nonce, padded);\n  const mac = u.hmacAad(hmac_key, ciphertext, nonce);\n  return base642.encode(concatBytes2(new Uint8Array([2]), nonce, ciphertext, mac));\n}\nfunction decrypt2(payload, conversationKey) {\n  const { nonce, ciphertext, mac } = u.decodePayload(payload);\n  const { chacha_key, chacha_nonce, hmac_key } = u.getMessageKeys(conversationKey, nonce);\n  const calculatedMac = u.hmacAad(hmac_key, ciphertext, nonce);\n  if (!equalBytes(calculatedMac, mac))\n    throw new Error(\"invalid MAC\");\n  const padded = chacha20(chacha_key, chacha_nonce, ciphertext);\n  return u.unpad(padded);\n}\nvar v2 = {\n  utils: u,\n  encrypt: encrypt2,\n  decrypt: decrypt2\n};\nvar nip44_default = { v2 };\n\n// nip47.ts\nvar nip47_exports = {};\n__export(nip47_exports, {\n  makeNwcRequestEvent: () => makeNwcRequestEvent,\n  parseConnectionString: () => parseConnectionString\n});\nfunction parseConnectionString(connectionString) {\n  const { pathname, searchParams } = new URL(connectionString);\n  const pubkey = pathname;\n  const relay = searchParams.get(\"relay\");\n  const secret = searchParams.get(\"secret\");\n  if (!pubkey || !relay || !secret) {\n    throw new Error(\"invalid connection string\");\n  }\n  return { pubkey, relay, secret };\n}\nasync function makeNwcRequestEvent(pubkey, secretKey, invoice) {\n  const content = {\n    method: \"pay_invoice\",\n    params: {\n      invoice\n    }\n  };\n  const encryptedContent = await encrypt(secretKey, pubkey, JSON.stringify(content));\n  const eventTemplate = {\n    kind: NWCWalletRequest,\n    created_at: Math.round(Date.now() / 1e3),\n    content: encryptedContent,\n    tags: [[\"p\", pubkey]]\n  };\n  return finalizeEvent(eventTemplate, secretKey);\n}\n\n// nip57.ts\nvar nip57_exports = {};\n__export(nip57_exports, {\n  getZapEndpoint: () => getZapEndpoint,\n  makeZapReceipt: () => makeZapReceipt,\n  makeZapRequest: () => makeZapRequest,\n  useFetchImplementation: () => useFetchImplementation4,\n  validateZapRequest: () => validateZapRequest\n});\nimport { bech32 as bech322 } from \"@scure/base\";\nvar _fetch4;\ntry {\n  _fetch4 = fetch;\n} catch {\n}\nfunction useFetchImplementation4(fetchImplementation) {\n  _fetch4 = fetchImplementation;\n}\nasync function getZapEndpoint(metadata) {\n  try {\n    let lnurl = \"\";\n    let { lud06, lud16 } = JSON.parse(metadata.content);\n    if (lud06) {\n      let { words } = bech322.decode(lud06, 1e3);\n      let data = bech322.fromWords(words);\n      lnurl = utf8Decoder.decode(data);\n    } else if (lud16) {\n      let [name, domain] = lud16.split(\"@\");\n      lnurl = new URL(`/.well-known/lnurlp/${name}`, `https://${domain}`).toString();\n    } else {\n      return null;\n    }\n    let res = await _fetch4(lnurl);\n    let body = await res.json();\n    if (body.allowsNostr && body.nostrPubkey) {\n      return body.callback;\n    }\n  } catch (err) {\n  }\n  return null;\n}\nfunction makeZapRequest({\n  profile,\n  event,\n  amount,\n  relays,\n  comment = \"\"\n}) {\n  if (!amount)\n    throw new Error(\"amount not given\");\n  if (!profile)\n    throw new Error(\"profile not given\");\n  let zr = {\n    kind: 9734,\n    created_at: Math.round(Date.now() / 1e3),\n    content: comment,\n    tags: [\n      [\"p\", profile],\n      [\"amount\", amount.toString()],\n      [\"relays\", ...relays]\n    ]\n  };\n  if (event) {\n    zr.tags.push([\"e\", event]);\n  }\n  return zr;\n}\nfunction validateZapRequest(zapRequestString) {\n  let zapRequest;\n  try {\n    zapRequest = JSON.parse(zapRequestString);\n  } catch (err) {\n    return \"Invalid zap request JSON.\";\n  }\n  if (!validateEvent(zapRequest))\n    return \"Zap request is not a valid Nostr event.\";\n  if (!verifyEvent(zapRequest))\n    return \"Invalid signature on zap request.\";\n  let p = zapRequest.tags.find(([t, v]) => t === \"p\" && v);\n  if (!p)\n    return \"Zap request doesn't have a 'p' tag.\";\n  if (!p[1].match(/^[a-f0-9]{64}$/))\n    return \"Zap request 'p' tag is not valid hex.\";\n  let e = zapRequest.tags.find(([t, v]) => t === \"e\" && v);\n  if (e && !e[1].match(/^[a-f0-9]{64}$/))\n    return \"Zap request 'e' tag is not valid hex.\";\n  let relays = zapRequest.tags.find(([t, v]) => t === \"relays\" && v);\n  if (!relays)\n    return \"Zap request doesn't have a 'relays' tag.\";\n  return null;\n}\nfunction makeZapReceipt({\n  zapRequest,\n  preimage,\n  bolt11,\n  paidAt\n}) {\n  let zr = JSON.parse(zapRequest);\n  let tagsFromZapRequest = zr.tags.filter(([t]) => t === \"e\" || t === \"p\" || t === \"a\");\n  let zap = {\n    kind: 9735,\n    created_at: Math.round(paidAt.getTime() / 1e3),\n    content: \"\",\n    tags: [...tagsFromZapRequest, [\"P\", zr.pubkey], [\"bolt11\", bolt11], [\"description\", zapRequest]]\n  };\n  if (preimage) {\n    zap.tags.push([\"preimage\", preimage]);\n  }\n  return zap;\n}\n\n// nip98.ts\nvar nip98_exports = {};\n__export(nip98_exports, {\n  getToken: () => getToken,\n  hashPayload: () => hashPayload,\n  unpackEventFromToken: () => unpackEventFromToken,\n  validateEvent: () => validateEvent2,\n  validateEventKind: () => validateEventKind,\n  validateEventMethodTag: () => validateEventMethodTag,\n  validateEventPayloadTag: () => validateEventPayloadTag,\n  validateEventTimestamp: () => validateEventTimestamp,\n  validateEventUrlTag: () => validateEventUrlTag,\n  validateToken: () => validateToken\n});\nimport { sha256 as sha2563 } from \"@noble/hashes/sha256\";\nimport { bytesToHex as bytesToHex4 } from \"@noble/hashes/utils\";\nimport { base64 as base643 } from \"@scure/base\";\nvar _authorizationScheme = \"Nostr \";\nasync function getToken(loginUrl, httpMethod, sign, includeAuthorizationScheme = false, payload) {\n  const event = {\n    kind: HTTPAuth,\n    tags: [\n      [\"u\", loginUrl],\n      [\"method\", httpMethod]\n    ],\n    created_at: Math.round(new Date().getTime() / 1e3),\n    content: \"\"\n  };\n  if (payload) {\n    event.tags.push([\"payload\", hashPayload(payload)]);\n  }\n  const signedEvent = await sign(event);\n  const authorizationScheme = includeAuthorizationScheme ? _authorizationScheme : \"\";\n  return authorizationScheme + base643.encode(utf8Encoder.encode(JSON.stringify(signedEvent)));\n}\nasync function validateToken(token, url, method) {\n  const event = await unpackEventFromToken(token).catch((error) => {\n    throw error;\n  });\n  const valid = await validateEvent2(event, url, method).catch((error) => {\n    throw error;\n  });\n  return valid;\n}\nasync function unpackEventFromToken(token) {\n  if (!token) {\n    throw new Error(\"Missing token\");\n  }\n  token = token.replace(_authorizationScheme, \"\");\n  const eventB64 = utf8Decoder.decode(base643.decode(token));\n  if (!eventB64 || eventB64.length === 0 || !eventB64.startsWith(\"{\")) {\n    throw new Error(\"Invalid token\");\n  }\n  const event = JSON.parse(eventB64);\n  return event;\n}\nfunction validateEventTimestamp(event) {\n  if (!event.created_at) {\n    return false;\n  }\n  return Math.round(new Date().getTime() / 1e3) - event.created_at < 60;\n}\nfunction validateEventKind(event) {\n  return event.kind === HTTPAuth;\n}\nfunction validateEventUrlTag(event, url) {\n  const urlTag = event.tags.find((t) => t[0] === \"u\");\n  if (!urlTag) {\n    return false;\n  }\n  return urlTag.length > 0 && urlTag[1] === url;\n}\nfunction validateEventMethodTag(event, method) {\n  const methodTag = event.tags.find((t) => t[0] === \"method\");\n  if (!methodTag) {\n    return false;\n  }\n  return methodTag.length > 0 && methodTag[1].toLowerCase() === method.toLowerCase();\n}\nfunction hashPayload(payload) {\n  const hash = sha2563(utf8Encoder.encode(JSON.stringify(payload)));\n  return bytesToHex4(hash);\n}\nfunction validateEventPayloadTag(event, payload) {\n  const payloadTag = event.tags.find((t) => t[0] === \"payload\");\n  if (!payloadTag) {\n    return false;\n  }\n  const payloadHash = hashPayload(payload);\n  return payloadTag.length > 0 && payloadTag[1] === payloadHash;\n}\nasync function validateEvent2(event, url, method, body) {\n  if (!verifyEvent(event)) {\n    throw new Error(\"Invalid nostr event, signature invalid\");\n  }\n  if (!validateEventKind(event)) {\n    throw new Error(\"Invalid nostr event, kind invalid\");\n  }\n  if (!validateEventTimestamp(event)) {\n    throw new Error(\"Invalid nostr event, created_at timestamp invalid\");\n  }\n  if (!validateEventUrlTag(event, url)) {\n    throw new Error(\"Invalid nostr event, url tag invalid\");\n  }\n  if (!validateEventMethodTag(event, method)) {\n    throw new Error(\"Invalid nostr event, method tag invalid\");\n  }\n  if (Boolean(body) && typeof body === \"object\" && Object.keys(body).length > 0) {\n    if (!validateEventPayloadTag(event, body)) {\n      throw new Error(\"Invalid nostr event, payload tag does not match request body hash\");\n    }\n  }\n  return true;\n}\nexport {\n  AbstractRelay,\n  AbstractSimplePool,\n  Relay,\n  SimplePool,\n  Subscription,\n  finalizeEvent,\n  fakejson_exports as fj,\n  generateSecretKey,\n  getEventHash,\n  getFilterLimit,\n  getPublicKey,\n  kinds_exports as kinds,\n  matchFilter,\n  matchFilters,\n  mergeFilters,\n  nip04_exports as nip04,\n  nip05_exports as nip05,\n  nip10_exports as nip10,\n  nip11_exports as nip11,\n  nip13_exports as nip13,\n  nip18_exports as nip18,\n  nip19_exports as nip19,\n  nip21_exports as nip21,\n  nip25_exports as nip25,\n  nip27_exports as nip27,\n  nip28_exports as nip28,\n  nip30_exports as nip30,\n  nip39_exports as nip39,\n  nip42_exports as nip42,\n  nip44_exports as nip44,\n  nip47_exports as nip47,\n  nip57_exports as nip57,\n  nip98_exports as nip98,\n  parseReferences,\n  relayConnect,\n  serializeEvent,\n  utils_exports as utils,\n  validateEvent,\n  verifiedSymbol,\n  verifyEvent\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}